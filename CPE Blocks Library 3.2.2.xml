<blocks app="Snap! 6, https://snap.berkeley.edu" version="1"><block-definition s="%&apos;arrow&apos; key move at %&apos;speed&apos; spped" type="command" category="motion"><comment x="0" y="0" w="162" collapsed="false">Moves the object using arrow keys or some buttons (such as rdfg)</comment><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">arrow<options>arrow&#xD;rdfg&#xD;ijkl</options></input><input type="%n">10</input></inputs><script><block s="doIf"><block s="reportKeyPressed"><block s="reportListItem"><block s="reportListIndex"><block var="arrow"/><block s="reportNewList"><list><l>arrow</l><l>rdfg</l><l>ijkl</l></list></block></block><block s="reportNewList"><list><l>up arrow</l><l>r</l><l>i</l></list></block></block></block><script><custom-block s="move %n steps in direction %n"><block var="speed"/><l>0</l></custom-block></script></block><block s="doIf"><block s="reportKeyPressed"><block s="reportListItem"><block s="reportListIndex"><block var="arrow"/><block s="reportNewList"><list><l>arrow</l><l>rdfg</l><l>ijkl</l></list></block></block><block s="reportNewList"><list><l>down arrow</l><l>f</l><l>k</l></list></block></block></block><script><custom-block s="move %n steps in direction %n"><block var="speed"/><l> 180</l></custom-block></script></block><block s="doIf"><block s="reportKeyPressed"><block s="reportListItem"><block s="reportListIndex"><block var="arrow"/><block s="reportNewList"><list><l>arrow</l><l>rdfg</l><l>ijkl</l></list></block></block><block s="reportNewList"><list><l>left arrow</l><l>d</l><l>j</l></list></block></block></block><script><custom-block s="move %n steps in direction %n"><block var="speed"/><l> -90</l></custom-block></script></block><block s="doIf"><block s="reportKeyPressed"><block s="reportListItem"><block s="reportListIndex"><block var="arrow"/><block s="reportNewList"><list><l>arrow</l><l>rdfg</l><l>ijkl</l></list></block></block><block s="reportNewList"><list><l>right arrow</l><l>g</l><l>l</l></list></block></block></block><script><custom-block s="move %n steps in direction %n"><block var="speed"/><l> 90</l></custom-block></script></block></script></block-definition><block-definition s="move %&apos;number&apos; steps in direction %&apos;dir&apos;" type="command" category="motion"><comment x="0" y="0" w="200" collapsed="false">Moves the object in specific direction without affecting current direction</comment><header></header><code></code><translations></translations><inputs><input type="%n">10</input><input type="%n">90<options>§_directionDialMenu&#xD;(90) right = 90&#xD;(-90) left = -90&#xD;(0) up = 0&#xD;(180) down = 180</options></input></inputs><script><block s="changeXPosition"><block s="reportProduct"><block s="reportMonadic"><l><option>sin</option></l><block var="dir"/></block><block var="number"/></block></block><block s="changeYPosition"><block s="reportProduct"><block s="reportMonadic"><l><option>cos</option></l><block var="dir"/></block><block var="number"/></block></block></script></block-definition><block-definition s="pointing in direction %&apos;num&apos; ?" type="predicate" category="motion"><comment x="0" y="0" w="160" collapsed="false">Returns true if the sprite is pointing in the specific direction</comment><header></header><code></code><translations></translations><inputs><input type="%n">90<options>§_directionDialMenu&#xD;(90) right = 90&#xD;(-90) left = -90&#xD;(0) up = 0&#xD;(180) down = 180</options></input></inputs><script><block s="doReport"><block s="reportEquals"><block s="direction"></block><block var="num"/></block></block></script></block-definition><block-definition s="draggable?" type="predicate" category="motion"><comment x="0" y="0" w="177" collapsed="false">Returns true if the sprite can be dragged with the mouse</comment><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportGet"><l><option>draggable?</option></l></block></block></script></block-definition><block-definition s="if touching %&apos;sprite&apos; bounce" type="command" category="motion"><comment x="0" y="0" w="256" collapsed="false">Makes the sprite bounce if it touches a spesific sprite</comment><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true"><options>§_objectsMenu</options></input></inputs><script><block s="doIf"><block s="reportTouchingObject"><block var="sprite"/></block><script><block s="turn"><l>180</l></block></script></block></script></block-definition><block-definition s="rotation style" type="reporter" category="motion"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportGet"><l><option>rotation style</option></l></block></block></script></block-definition><block-definition s="glide %&apos;s&apos; secs to %&apos;sprite&apos;" type="command" category="motion"><comment x="0" y="0" w="243.70214843750006" collapsed="false">Like the built in Glide block but with effectsof the go to built in block</comment><header></header><code></code><translations></translations><inputs><input type="%n">1</input><input type="%s" readonly="true"><options>§_objectsMenu</options></input></inputs><script><block s="doGlide"><block var="s"/><block s="reportAttributeOf"><l><option>x position</option></l><block var="sprite"/></block><block s="reportAttributeOf"><l><option>y position</option></l><block var="sprite"/></block></block></script></block-definition><block-definition s="position" type="reporter" category="motion"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportNewList"><list><block s="xPosition"></block><block s="yPosition"></block></list></block></block></script></block-definition><block-definition s="%&apos;obj&apos; position" type="reporter" category="motion"><comment x="0" y="0" w="345.2119140625" collapsed="false">Returns X and Y of a specific sprite</comment><header></header><code></code><translations></translations><inputs><input type="%obj"></input></inputs><script><block s="doReport"><block s="reportAskFor"><block var="obj"/><block s="reifyReporter"><autolambda><custom-block s="position"></custom-block></autolambda><list></list></block><list></list></block></block></script></block-definition><block-definition s="make %&apos;obj&apos; move %&apos;num&apos; steps" type="command" category="motion"><comment x="0" y="0" w="220" collapsed="false">Forces specific sprites to move x steps</comment><header></header><code></code><translations></translations><inputs><input type="%mult%obj"></input><input type="%n">10</input></inputs><script><block s="doForEach"><l>item</l><block var="obj"/><script><block s="doTellTo"><l></l><block s="reifyScript"><script><block s="forward"><block var="num"/></block></script><list></list></block><list></list></block></script></block></script></block-definition><block-definition s="run %&apos;inline&apos; while being draggable" type="command" category="motion"><comment x="0" y="0" w="189" collapsed="false">Runs the script only while you can actually drag the sprite using the mouse.</comment><header></header><code></code><translations></translations><inputs><input type="%cmdRing"></input></inputs><script><block s="doIf"><custom-block s="draggable?"></custom-block><script><block s="doRun"><block var="inline"/><list></list></block></script></block></script></block-definition><block-definition s="point towards x: %&apos;x&apos; y: %&apos;y&apos;" type="command" category="motion"><header></header><code></code><translations></translations><inputs><input type="%n">0</input><input type="%n">0</input></inputs><script><block s="setHeading"><custom-block s="%s to x: %n y: %n"><l>direction</l><block var="x"/><block var="y"/></custom-block></block></script></block-definition><block-definition s="toggle dragging state" type="command" category="motion"><comment x="0" y="0" w="348.5703125" collapsed="false">Toggles sprite&apos;s draggable state</comment><header></header><code></code><translations></translations><inputs></inputs><script><block s="doSetVar"><l><option>draggable?</option></l><block s="reportNot"><custom-block s="draggable?"></custom-block></block></block></script></block-definition><block-definition s="for ( %&apos;inline&apos; ; %&apos;bool&apos; ; %&apos;step&apos; ) %&apos;action&apos;" type="command" category="control"><comment x="0" y="0" w="266" collapsed="false">Runs the script in the 1st inline block.&#xD;Then until the condition in the predicate input is met, it runs the cslot script first and then the script in the 2nd inline block.</comment><header></header><code></code><translations></translations><inputs><input type="%cmdRing"></input><input type="%predRing"></input><input type="%cmdRing"></input><input type="%ca"></input></inputs><script><block s="doRun"><block var="inline"/><list></list></block><block s="doUntil"><block s="evaluate"><block var="bool"/><list></list></block><script><block s="doRun"><block var="action"/><list></list></block><block s="doRun"><block var="step"/><list></list></block></script></block></script></block-definition><block-definition s="for each %&apos;v&apos; in %&apos;num&apos; %&apos;action&apos;" type="command" category="control"><comment x="0" y="0" w="156" collapsed="false">This block works like the built in repeat block but with an upvar variable for use in the script</comment><header></header><code></code><translations></translations><inputs><input type="%upvar"></input><input type="%n">10</input><input type="%cs"></input></inputs><script><block s="doFor"><l>i</l><l>1</l><block var="num"/><script><block s="doSetVar"><l>v</l><block var="i"/></block><block s="doRun"><block var="action"/><list></list></block></script></block></script></block-definition><block-definition s="do in parallel %&apos;actions&apos; and wait" type="command" category="control"><comment x="0" y="0" w="238.6666666666667" collapsed="false">Accepts any number of scripts as inputs.  Launches a separate thread for each of them, so they are done in parallel, then waits for them all to complete.&#xD;&#xD;This doesn&apos;t change how the Snap! scheduler works; the threads are not truly asynchronous. And there is no increase in speed.  Rather, the point of this block is to allow starting synchronized but independent scripts.</comment><header></header><code></code><translations>pt:executa _ em paralelo e espera&#xD;</translations><inputs><input type="%mult%cs"></input></inputs><script><block s="doDeclareVariables"><list><l>threads</l></list></block><block s="doSetVar"><l>threads</l><block s="reportMap"><block s="reifyReporter"><autolambda><block s="evaluate"><block s="reifyScript"><script><block s="doDeclareVariables"><list><l>is running?</l></list></block><block s="doSetVar"><l>is running?</l><block s="reportBoolean"><l><bool>true</bool></l></block></block><block s="fork"><block s="reifyScript"><script><block s="doRun"><block var="each script"/><list></list></block><block s="doSetVar"><l>is running?</l><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><list></list></block><list></list></block><block s="doReport"><block s="reifyScript"><script><block s="doReport"><block var="is running?"/></block></script><list></list></block></block></script><list></list></block><list></list></block></autolambda><list><l>each script</l></list></block><block var="actions"/></block></block><block s="doWaitUntil"><block s="reportListIsEmpty"><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="evaluate"><block var="test"/><list></list></block></autolambda><list><l>test</l></list></block><block var="threads"/></block></block></block></script></block-definition><block-definition s="do in parallel %&apos;actions&apos;" type="command" category="control"><comment x="0" y="0" w="238.6666666666667" collapsed="false">Accepts any number of scripts as inputs.  Launches a separate thread for each of them, so they are done in parallel, then continues with the current script while they all run.&#xD;&#xD;This doesn&apos;t change how the Snap! scheduler works; the threads are not truly asynchronous. And there is no increase in speed.  Rather, the point of this block is to allow starting synchronized but independent scripts.</comment><header></header><code></code><translations>pt:executa _ em paralelo&#xD;</translations><inputs><input type="%mult%cs"></input></inputs><script><block s="doIf"><block s="reportGreaterThan"><block s="reportListLength"><block var="actions"/></block><l>0</l></block><script><block s="fork"><block s="reportListItem"><l>1</l><block var="actions"/></block><list></list></block><custom-block s="do in parallel %mult%cs"><block s="reportCDR"><block var="actions"/></block></custom-block></script></block></script></block-definition><block-definition s="run %&apos;inline&apos; on %&apos;list&apos;" type="command" category="control"><header></header><code></code><translations></translations><inputs><input type="%cmdRing"></input><input type="%l"></input></inputs><script><block s="doForEach"><l>item</l><block var="list"/><script><block s="doTellTo"><block var="item"/><block var="inline"/><list></list></block></script></block></script></block-definition><block-definition s="run anything from %&apos;blocks&apos;" type="command" category="control"><comment x="0" y="0" w="347.8994140625" collapsed="false">Runs a random script from the list of scripts set</comment><header></header><code></code><translations></translations><inputs><input type="%mult%cmdRing"></input></inputs><script><block s="doRun"><block s="reportListItem"><l><option>any</option></l><block var="blocks"/></block><list></list></block></script></block-definition><block-definition s="pipe %&apos;value&apos; to %&apos;repos&apos;" type="reporter" category="control"><comment x="0" y="0" w="322" collapsed="false">Takes an value (Such as text or list) in the 1st input and a reporter in the 2nd ones. The string from the 1st input is then manipulated using the reporters set in the 2nd input slot. (i.e PIPE [10] to (@ + @)-(@ x 2)) returns 40</comment><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%mult%repRing"></input></inputs><script><block s="doWarp"><script><block s="doIfElse"><block s="reportListIsEmpty"><block var="repos"/></block><script><block s="doReport"><block var="value"/></block></script><script><block s="doReport"><custom-block s="pipe %s to %mult%repRing"><block s="evaluate"><block s="reportListItem"><l>1</l><block var="repos"/></block><list><block var="value"/></list></block><block s="reportCDR"><block var="repos"/></block></custom-block></block></script></block></script></block></script></block-definition><block-definition s="%&apos;v&apos; repeated function %&apos;num&apos; times at %&apos;val&apos; via %&apos;repo&apos;" type="reporter" category="control"><header></header><code></code><translations></translations><inputs><input type="%upvar"></input><input type="%n">5</input><input type="%s"></input><input type="%repRing"></input></inputs><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>v</l><l>0</l></block><block s="doSetVar"><l>a</l><block var="val"/></block><custom-block s="for each %upvar in %n %cs"><l>b</l><block var="num"/><script><block s="doSetVar"><l>v</l><block var="b"/></block><block s="doSetVar"><l>a</l><block s="evaluate"><block var="repo"/><list><block var="a"/></list></block></block></script></custom-block><block s="doReport"><block var="a"/></block></script></block></script></block-definition><block-definition s="turbo %&apos;action&apos;" type="command" category="other"><header></header><code></code><translations></translations><inputs><input type="%cs"></input></inputs><script><block s="doSetGlobalFlag"><l><option>turbo mode</option></l><l><bool>true</bool></l></block><block s="doRun"><block var="action"/><list></list></block><block s="doSetGlobalFlag"><l><option>turbo mode</option></l><l><bool>false</bool></l></block></script></block-definition><block-definition s="%&apos;v&apos; repeated function until %&apos;pred&apos; at %&apos;val&apos; via %&apos;repo&apos;" type="reporter" category="control"><header></header><code></code><translations></translations><inputs><input type="%upvar"></input><input type="%predRing"></input><input type="%s"></input><input type="%repRing"></input></inputs><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doWarp"><script><custom-block s="for ( %cmdRing ; %predRing ; %cmdRing ) %ca"><block s="reifyScript"><script><block s="doSetVar"><l>a</l><block var="val"/></block><block s="doSetVar"><l>v</l><l>1</l></block></script><list></list></block><block s="reifyPredicate"><autolambda><block s="evaluate"><block var="pred"/><list><block var="a"/></list></block></autolambda><list></list></block><block s="reifyScript"><script><block s="doChangeVar"><l>v</l><l>1</l></block></script><list></list></block><script><block s="doSetVar"><l>a</l><block s="evaluate"><block var="repo"/><list><block var="a"/></list></block></block></script></custom-block></script></block><block s="doReport"><block var="a"/></block></script></block-definition><block-definition s="unless %&apos;bool&apos; %&apos;action&apos;" type="command" category="control"><comment x="0" y="0" w="179" collapsed="false">The opposite of the built in if block</comment><header></header><code></code><translations></translations><inputs><input type="%b"></input><input type="%cs"></input></inputs><script><block s="doIf"><block s="reportNot"><block var="bool"/></block><script><block s="doRun"><block var="action"/><list></list></block></script></block></script></block-definition><block-definition s="while %&apos;bool&apos; %&apos;action&apos;" type="command" category="control"><header></header><code></code><translations></translations><inputs><input type="%boolUE"></input><input type="%ca"></input></inputs><script><block s="doUntil"><block s="reportNot"><block s="evaluate"><block var="bool"/><list></list></block></block><script><block s="doRun"><block var="action"/><list></list></block></script></block></script></block-definition><block-definition s="repeat %&apos;num&apos; secs %&apos;action&apos;" type="command" category="control"><header></header><code></code><translations></translations><inputs><input type="%n">10</input><input type="%ca"></input></inputs><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><block s="reportSum"><block s="getTimer"></block><block var="num"/></block></block><block s="doUntil"><block s="reportGreaterThan"><block s="getTimer"></block><block var="a"/></block><script><block s="doRun"><block var="action"/><list></list></block></script></block></script></block-definition><block-definition s="width" type="reporter" category="looks"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportGet"><l><option>width</option></l></block></block></script></block-definition><block-definition s="%&apos;obj&apos; width" type="reporter" category="looks"><header></header><code></code><translations></translations><inputs><input type="%obj"></input></inputs><script><block s="doReport"><block s="reportAskFor"><block var="obj"/><block s="reifyReporter"><autolambda><custom-block s="width"></custom-block></autolambda><list></list></block><list></list></block></block></script></block-definition><block-definition s="height" type="reporter" category="looks"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportGet"><l><option>height</option></l></block></block></script></block-definition><block-definition s="%&apos;obj&apos; height" type="reporter" category="looks"><header></header><code></code><translations></translations><inputs><input type="%obj"></input></inputs><script><block s="doReport"><block s="reportAskFor"><block var="obj"/><block s="reifyReporter"><autolambda><custom-block s="height"></custom-block></autolambda><list></list></block><list></list></block></block></script></block-definition><block-definition s="pixels" type="reporter" category="looks"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportProduct"><custom-block s="height"></custom-block><custom-block s="width"></custom-block></block></block></script></block-definition><block-definition s="%&apos;obj&apos; pixels" type="reporter" category="looks"><header></header><code></code><translations></translations><inputs><input type="%obj"></input></inputs><script><block s="doReport"><block s="reportAskFor"><block var="obj"/><block s="reifyReporter"><autolambda><custom-block s="pixels"></custom-block></autolambda><list></list></block><list></list></block></block></script></block-definition><block-definition s="%&apos;obj&apos; size" type="reporter" category="looks"><header></header><code></code><translations></translations><inputs><input type="%obj"></input></inputs><script><block s="doReport"><block s="reportAskFor"><block var="obj"/><block s="reifyReporter"><autolambda><block s="getScale"></block></autolambda><list></list></block><list></list></block></block></script></block-definition><block-definition s="backdrop name" type="reporter" category="looks"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportAttributeOf"><l><option>costume name</option></l><l>Σκηνή</l></block></block></script></block-definition><block-definition s="%&apos;obj&apos; shown?" type="predicate" category="looks"><header></header><code></code><translations></translations><inputs><input type="%obj"></input></inputs><script><block s="doReport"><block s="reportAskFor"><block var="obj"/><block s="reifyReporter"><autolambda><block s="reportShown"></block></autolambda><list></list></block><list></list></block></block></script></block-definition><block-definition s="name of costume # %&apos;num&apos;" type="reporter" category="looks"><header></header><code></code><translations></translations><inputs><input type="%n">1</input></inputs><script><block s="doReport"><block s="reportGetImageAttribute"><l><option>name</option></l><block var="num"/></block></block></script></block-definition><block-definition s="wearning costume %&apos;cost&apos; ?" type="predicate" category="looks"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true"><options>§_costumesMenu</options></input></inputs><script><block s="doReport"><block s="reportEquals"><custom-block s="costume name"></custom-block><block var="cost"/></block></block></script></block-definition><block-definition s="costume name" type="reporter" category="looks"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><custom-block s="name of costume # %n"><block s="getCostumeIdx"></block></custom-block></block></script></block-definition><block-definition s="wearning costume # %&apos;num&apos; ?" type="predicate" category="looks"><header></header><code></code><translations></translations><inputs><input type="%n">1</input></inputs><script><block s="doReport"><block s="reportEquals"><block var="num"/><block s="getCostumeIdx"></block></block></block></script></block-definition><block-definition s="%&apos;sprite&apos; wearing costume # %&apos;cost&apos;" type="predicate" category="looks"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true"><options>§_objectsMenu</options></input><input type="%n">1</input></inputs><script><block s="doReport"><block s="reportAskFor"><block var="sprite"/><block s="reifyReporter"><autolambda><custom-block s="wearning costume # %n ?"><block var="cost"/></custom-block></autolambda><list></list></block><list></list></block></block></script></block-definition><block-definition s="say nothing" type="command" category="looks"><header></header><code></code><translations></translations><inputs></inputs><script><block s="bubble"><l></l></block></script></block-definition><block-definition s="animate costumes %&apos;c1&apos; and %&apos;c2&apos; %&apos;num&apos; times at %&apos;fps&apos; fps" type="command" category="looks"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true"><options>§_costumesMenu</options></input><input type="%s" readonly="true"><options>§_costumesMenu</options></input><input type="%n">3</input><input type="%n">20</input></inputs><script><block s="doRepeat"><block var="num"/><script><block s="doSwitchToCostume"><block var="c1"/></block><block s="doWait"><block s="reportQuotient"><l>1</l><block var="fps"/></block></block><block s="doSwitchToCostume"><block var="c2"/></block><block s="doWait"><block s="reportQuotient"><l>1</l><block var="fps"/></block></block></script></block><block s="doSwitchToCostume"><block var="c1"/></block></script></block-definition><block-definition s="set %&apos;var&apos; to be %&apos;set&apos;" type="command" category="variables"><comment x="0" y="0" w="358.3948567708335" collapsed="false">Version of the built in block that allows inputs to be placed on the dropdown menu</comment><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true"><options>§_getVarNamesDict</options></input><input type="%s">0</input></inputs><script><block s="doIf"><custom-block s="does variable %s exist?"><block var="var"/></custom-block><script><block s="doRun"><block s="reifyScript"><script><block s="doSetVar"><l></l><block var="set"/></block></script><list></list></block><list><block var="var"/></list></block></script></block></script></block-definition><block-definition s="set size for all to %&apos;num&apos; %" type="command" category="looks"><header></header><code></code><translations></translations><inputs><input type="%n">100</input></inputs><script><custom-block s="run %cmdRing on %l"><block s="reifyScript"><script><block s="setScale"><block var="num"/></block></script><list></list></block><custom-block s="all sprites"></custom-block></custom-block></script></block-definition><block-definition s="all sprites" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportCONS"><block s="reportObject"><l><option>myself</option></l></block><block s="reportGet"><l><option>other sprites</option></l></block></block></block></script></block-definition><block-definition s="change size for all by %&apos;num&apos;" type="command" category="looks"><header></header><code></code><translations></translations><inputs><input type="%n">10</input></inputs><script><custom-block s="run %cmdRing on %l"><block s="reifyScript"><script><block s="changeScale"><block var="num"/></block></script><list></list></block><custom-block s="all sprites"></custom-block></custom-block></script></block-definition><block-definition s="%&apos;type&apos; all sprites" type="command" category="looks"><comment x="0" y="0" w="183.833984375" collapsed="false">Hide All Sprites - Hides every sprite&#xD;Show All Sprites - Shows every sprite </comment><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">hide<options>hide&#xD;show</options></input></inputs><script><custom-block s="run %cmdRing on %l"><block s="reportIfElse"><block s="reportEquals"><block var="type"/><l>show</l></block><block s="reifyScript"><script><block s="show"></block></script><list></list></block><block s="reifyScript"><script><block s="hide"></block></script><list></list></block></block><custom-block s="all sprites"></custom-block></custom-block></script></block-definition><block-definition s="animate costumes %&apos;c1&apos; and %&apos;c2&apos; %&apos;num&apos; times at %&apos;fps&apos; fps and run %&apos;action&apos;" type="command" category="looks"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true"><options>§_costumesMenu</options></input><input type="%s" readonly="true"><options>§_costumesMenu</options></input><input type="%n">3</input><input type="%n">20</input><input type="%cs"></input></inputs><script><block s="fork"><block s="reifyScript"><script><custom-block s="animate costumes %s and %s %n times at %n fps"><block var="c1"/><block var="c2"/><block var="num"/><block var="fps"/></custom-block></script><list></list></block><list></list></block><block s="doRun"><block var="action"/><list></list></block></script></block-definition><block-definition s="run %&apos;action&apos; only when wearing costume # %&apos;num&apos;" type="command" category="looks"><header></header><code></code><translations></translations><inputs><input type="%cs"></input><input type="%n">1</input></inputs><script><block s="doIf"><custom-block s="wearning costume # %n ?"><block var="num"/></custom-block><script><block s="doRun"><block var="action"/><list></list></block></script></block></script></block-definition><block-definition s="say texts %&apos;texts&apos; for %&apos;num&apos; secs" type="command" category="looks"><header></header><code></code><translations></translations><inputs><input type="%mult%s"></input><input type="%n">2</input></inputs><script><block s="doForEach"><l>item</l><block var="texts"/><script><block s="doSayFor"><block var="item"/><block var="num"/></block></script></block></script></block-definition><block-definition s="say items from %&apos;list&apos; for %&apos;num&apos; secs" type="command" category="looks"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%n">2</input></inputs><script><custom-block s="say texts %mult%s for %n secs"><block var="list"/><block var="num"/></custom-block></script></block-definition><block-definition s="say contents from %&apos;lists&apos; for %&apos;num&apos; secs" type="command" category="looks"><header></header><code></code><translations></translations><inputs><input type="%mult%l"></input><input type="%n">2</input></inputs><script><block s="doForEach"><l>item</l><block var="lists"/><script><custom-block s="say items from %l for %n secs"><block var="item"/><block var="num"/></custom-block></script></block></script></block-definition><block-definition s="say alll possible combinations from %&apos;lists&apos; for %&apos;num&apos; secs" type="command" category="looks"><comment x="0" y="0" w="206" collapsed="false">Says every combination that can be done with the item of the lists you set</comment><header></header><code></code><translations></translations><inputs><input type="%mult%l"></input><input type="%n">2</input></inputs><script><block s="doForEach"><l>item</l><custom-block s="crossproduct %mult%l"><block var="lists"/></custom-block><script><block s="doSayFor"><custom-block s="%l as text"><block var="item"/></custom-block><block var="num"/></block></script></block></script></block-definition><block-definition s="%&apos;sprite1&apos; touching %&apos;sprite2&apos; ?" type="predicate" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true"><options>§_objectsMenu</options></input><input type="%s" readonly="true"><options>§_objectsMenu</options></input></inputs><script><block s="doReport"><block s="reportAskFor"><block var="sprite1"/><block s="reifyReporter"><autolambda><block s="reportTouchingObject"><block var="sprite2"/></block></autolambda><list></list></block><list></list></block></block></script></block-definition><block-definition s="sprite clicked?" type="predicate" category="sensing"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportAnd"><block s="reportMouseDown"></block><block s="reportTouchingObject"><l><option>mouse-pointer</option></l></block></block></block></script></block-definition><block-definition s="%&apos;obj&apos; clicked?" type="predicate" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true"><options>§_objectsMenu</options></input></inputs><script><block s="doReport"><block s="reportAskFor"><block var="obj"/><block s="reifyReporter"><autolambda><custom-block s="sprite clicked?"></custom-block></autolambda><list></list></block><list></list></block></block></script></block-definition><block-definition s="%&apos;num&apos; %&apos;type1&apos; to %&apos;type2&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%n">24</input><input type="%s" readonly="true">Mbps<options>Kbps&#xD;Mbps&#xD;Gbps</options></input><input type="%s" readonly="true">MB/s<options>KB/s&#xD;MB/s&#xD;GB/s</options></input></inputs><script><block s="doDeclareVariables"><list><l>a</l><l>b</l></list></block><block s="doSetVar"><l>a</l><block s="reportListItem"><block s="reportListIndex"><block var="type1"/><block s="reportNewList"><list><l>Kbps</l><l>Mbps</l><l>Gbps</l></list></block></block><block s="reportNewList"><list><l>0.001</l><l>1</l><l>1000</l></list></block></block></block><block s="doSetVar"><l>b</l><block s="reportListItem"><block s="reportListIndex"><block var="type2"/><block s="reportNewList"><list><l>KB/s</l><l>MB/s</l><l>GB/s</l></list></block></block><block s="reportNewList"><list><l>0.001</l><l>1</l><l>1000</l></list></block></block></block><block s="doReport"><block s="reportJoinWords"><list><block s="reportQuotient"><block s="reportProduct"><block var="num"/><block var="a"/></block><block s="reportProduct"><l>8</l><block var="b"/></block></block><block s="reportListItem"><block s="reportListIndex"><block var="type2"/><block s="reportNewList"><list><l>KB/s</l><l>MB/s</l><l>GB/s</l></list></block></block><block s="reportNewList"><list><l> KB/s</l><l> MB/s</l><l> GB/s</l></list></block></block></list></block></block></script></block-definition><block-definition s="last answered %&apos;list&apos; ?" type="predicate" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%mult%s"></input></inputs><script><block s="doReport"><block s="reportListContainsItem"><block var="list"/><block s="getLastAnswer"></block></block></block></script></block-definition><block-definition s="speak %&apos;text&apos; with %&apos;lang&apos; accent $nl and pitch %&apos;pitch&apos; rate %&apos;rate&apos;" type="command" category="sound"><header></header><code></code><translations>de:sprich _ mit _ Aussprache _ und Höhe _ Geschwindigkeit _&#xD;pt:fala _ na língua _ _ com tom _ e velocidade _&#xD;</translations><inputs><input type="%s">Hello, World!</input><input type="%txt">en-US<options>العربية=ar&#xD;Български=bg&#xD;বাংলা=bn&#xD;Català=ca&#xD;Català - Valencià=ca-VA&#xD;Česky=cs&#xD;Deutsch=de&#xD;Dansk=dk&#xD;Ελληνικά=el&#xD;English-American=en-US&#xD;English-British=en-GB&#xD;Esperanto=eo&#xD;Español=es&#xD;Eesti=et&#xD;Euskara=eu&#xD;suomi=fi&#xD;Français=fr&#xD;Galego=gl&#xD;Hrvatski=hr&#xD;Magyar=hu&#xD;Interlingua=ia&#xD;Bahasa Indonesia=id&#xD;Italiano=it&#xD;日本語=ja&#xD;にほんご=ja-HIRA&#xD;ಕನ್ನಡ=kn&#xD;한국어=ko&#xD;Malayalam=ml&#xD;Nederlands=nl&#xD;Norsk=no&#xD;Polski=pl&#xD;Português=pt&#xD;Português do Brasil=pt-BR&#xD;Român=ro&#xD;Русский=ru&#xD;Slovenščina=si&#xD;svenska=sv&#xD;Tamil=ta&#xD;Telagu=te&#xD;Türkçe=tr&#xD;Українська=ua&#xD;简体中文=zh-CN&#xD;繁體中文=zh-TW</options></input><input type="%n">1</input><input type="%n">1</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>msg</l><l>accent</l><l>pitch</l><l>rate</l></list><l>var utter = new SpeechSynthesisUtterance(msg);&#xD;utter.lang = accent;&#xD;utter.pitch = pitch;&#xD;utter.rate = rate;&#xD;window.speechSynthesis.speak(utter);</l></block><list><block var="text"/><block var="lang"/><block var="pitch"/><block var="rate"/></list></block></script></block-definition><block-definition s="speak %&apos;text&apos; with %&apos;lang&apos; accent $nl and pitch %&apos;pitch&apos; rate %&apos;rate&apos; and wait" type="command" category="sound"><header></header><code></code><translations>de:sprich _ mit _ Aussprache _ und Höhe _ Geschwindigkeit _ und warte&#xD;pt:fala _ na língua _ _ com tom _ e velocidade _ , e espera&#xD;</translations><inputs><input type="%s">Hello, World!</input><input type="%txt">en-US<options>العربية=ar&#xD;Български=bg&#xD;বাংলা=bn&#xD;Català=ca&#xD;Català - Valencià=ca-VA&#xD;Česky=cs&#xD;Deutsch=de&#xD;Dansk=dk&#xD;Ελληνικά=el&#xD;English-American=en-US&#xD;English-British=en-GB&#xD;Esperanto=eo&#xD;Español=es&#xD;Eesti=et&#xD;Euskara=eu&#xD;suomi=fi&#xD;Français=fr&#xD;Galego=gl&#xD;Hrvatski=hr&#xD;Magyar=hu&#xD;Interlingua=ia&#xD;Bahasa Indonesia=id&#xD;Italiano=it&#xD;日本語=ja&#xD;にほんご=ja-HIRA&#xD;ಕನ್ನಡ=kn&#xD;한국어=ko&#xD;Malayalam=ml&#xD;Nederlands=nl&#xD;Norsk=no&#xD;Polski=pl&#xD;Português=pt&#xD;Português do Brasil=pt-BR&#xD;Român=ro&#xD;Русский=ru&#xD;Slovenščina=si&#xD;svenska=sv&#xD;Tamil=ta&#xD;Telagu=te&#xD;Türkçe=tr&#xD;Українська=ua&#xD;简体中文=zh-CN&#xD;繁體中文=zh-TW</options></input><input type="%n">1</input><input type="%n">1</input></inputs><script><block s="doDeclareVariables"><list><l>test</l></list></block><block s="doSetVar"><l>test</l><block s="evaluate"><block s="reportJSFunction"><list><l>msg</l><l>accent</l><l>pitch</l><l>rate</l></list><l>var utter = new SpeechSynthesisUtterance(msg),&#xD;    isDone = false;&#xD;utter.lang = accent;&#xD;utter.pitch = pitch;&#xD;utter.rate = rate;&#xD;utter.onend = function () {isDone = true; };&#xD;window.speechSynthesis.speak(utter);&#xD;return function () {return isDone; };</l></block><list><block var="text"/><block var="lang"/><block var="pitch"/><block var="rate"/></list></block></block><block s="doWaitUntil"><block s="evaluate"><block var="test"/><list></list></block></block></script></block-definition><block-definition s="size for %&apos;num&apos; DPI" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%n">96</input></inputs><script><block s="doReport"><block s="reportRound"><block s="reportProduct"><block var="num"/><l>1.042</l></block></block></block></script></block-definition><block-definition s="rota %&apos;something&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s">What&apos;s your name?</input></inputs><script><block s="doTellTo"><l>Σκηνή</l><block s="reifyScript"><script><block s="doAsk"><block var="something"/></block></script><list></list></block><list></list></block><block s="doReport"><block s="getLastAnswer"></block></block></script></block-definition><block-definition s="days since 2000" type="reporter" category="sensing"><comment x="0" y="0" w="240" collapsed="false">Returns the days that have passed since 2000</comment><header></header><code></code><translations></translations><inputs></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><block s="reportSum"><block s="reportDifference"><block s="reportProduct"><l>367</l><block s="reportDate"><l><option>year</option></l></block></block><block s="reportMonadic"><l><option>floor</option></l><block s="reportQuotient"><block s="reportProduct"><l>7</l><block s="reportSum"><block s="reportDate"><l><option>year</option></l></block><block s="reportMonadic"><l><option>floor</option></l><block s="reportQuotient"><block s="reportSum"><block s="reportDate"><l><option>month</option></l></block><l>9</l></block><l>12</l></block></block></block></block><l>4</l></block></block></block><block s="reportDifference"><block s="reportSum"><block s="reportMonadic"><l><option>floor</option></l><block s="reportQuotient"><block s="reportProduct"><l>275</l><block s="reportDate"><l><option>month</option></l></block></block><l>9</l></block></block><block s="reportDate"><l><option>date</option></l></block></block><l>730530</l></block></block></block><block s="doIf"><block s="reportLessThan"><block var="a"/><l>-36435</l></block><script><block s="doChangeVar"><l>a</l><l>1</l></block></script></block><block s="doIf"><block s="reportLessThan"><block var="a"/><l>-72990</l></block><script><block s="doChangeVar"><l>a</l><l>1</l></block></script></block><block s="doIf"><block s="reportGreaterThan"><block var="a"/><l>36585</l></block><script><block s="doChangeVar"><l>a</l><l>-1</l></block></script></block><block s="doChangeVar"><l>a</l><l>-1</l></block><block s="doReport"><block var="a"/></block></script></block></script></block-definition><block-definition s="Scratch Days" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportDifference"><custom-block s="days since 2000"></custom-block><l>2692</l></block></block></script></block-definition><block-definition s="%&apos;type&apos; to x: %&apos;x&apos; y: %&apos;y&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">distance<options>distance&#xD;direction</options></input><input type="%n">0</input><input type="%n">0</input></inputs><script><block s="doReport"><block s="reportRelationTo"><block var="type"/><block s="reportNewList"><list><block var="x"/><block var="y"/></list></block></block></block></script></block-definition><block-definition s="min x" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportDifference"><block s="xPosition"></block><block s="reportProduct"><l>0.5</l><custom-block s="width"></custom-block></block></block></block></script></block-definition><block-definition s="max x" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportSum"><block s="xPosition"></block><block s="reportProduct"><l>0.5</l><custom-block s="width"></custom-block></block></block></block></script></block-definition><block-definition s="min y" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportDifference"><block s="yPosition"></block><block s="reportProduct"><l>0.5</l><custom-block s="height"></custom-block></block></block></block></script></block-definition><block-definition s="max y" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportSum"><block s="yPosition"></block><block s="reportProduct"><l>0.5</l><custom-block s="height"></custom-block></block></block></block></script></block-definition><block-definition s="set %&apos;sprite&apos; name to %&apos;name&apos;" type="command" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%obj" readonly="true"><options>§_objectsMenu</options></input><input type="%s">Alonzo</input></inputs><script><block s="doTellTo"><block var="sprite"/><block s="reifyScript"><script><block s="doSetVar"><l><option>name</option></l><block var="name"/></block></script><list></list></block><list></list></block></script></block-definition><block-definition s="is %&apos;obj&apos; named %&apos;name&apos; ?" type="predicate" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%obj"></input><input type="%s">Alonzo</input></inputs><script><block s="doReport"><block s="reportEquals"><block s="reportAskFor"><block var="obj"/><block s="reifyReporter"><autolambda><block s="reportGet"><l><option>name</option></l></block></autolambda><list></list></block><list></list></block><block var="name"/></block></block></script></block-definition><block-definition s="sprites touching me" type="reporter" category="sensing"><comment x="0" y="0" w="182" collapsed="false">Reports every other sprite the current one is touching</comment><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportTouchingObject"><l></l></block></autolambda><list></list></block><block s="reportGet"><l><option>other sprites</option></l></block></block></block></script></block-definition><block-definition s="sprites touching %&apos;obj&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true"><options>§_objectsMenu</options></input></inputs><script><block s="doReport"><block s="reportAskFor"><block var="obj"/><block s="reifyReporter"><autolambda><custom-block s="sprites touching me"></custom-block></autolambda><list></list></block><list></list></block></block></script></block-definition><block-definition s="broken?" type="predicate" category="sensing"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportNot"><block s="reportListIsEmpty"><block s="reportGet"><l><option>parts</option></l></block></block></block></block></script></block-definition><block-definition s="%&apos;obj&apos; broken?" type="predicate" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true"><options>§_objectsMenu</options></input></inputs><script><block s="doReport"><block s="reportAskFor"><block var="obj"/><block s="reifyReporter"><autolambda><custom-block s="broken?"></custom-block></autolambda><list></list></block><list></list></block></block></script></block-definition><block-definition s="rota %&apos;text&apos; and run %&apos;action&apos; with the inputted answer" type="command" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s">What&apos;s your name?</input><input type="%cs"></input></inputs><script><block s="doRun"><block var="action"/><list><custom-block s="rota %s"><block var="text"/></custom-block></list></block></script></block-definition><block-definition s="mouse up?" type="predicate" category="sensing"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportNot"><block s="reportMouseDown"></block></block></block></script></block-definition><block-definition s="play notes %&apos;notes&apos; for %&apos;beat&apos; beats" type="command" category="sound"><header></header><code></code><translations></translations><inputs><input type="%mult%n"></input><input type="%n">0.5</input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>item</l><block var="notes"/><script><block s="doAddToList"><block s="reifyScript"><script><block s="doPlayNote"><block var="item"/><block var="beat"/></block></script><list></list></block><block var="a"/></block></script></block></script></block><custom-block s="do in parallel %mult%cs and wait"><block var="a"/></custom-block></script></block-definition><block-definition s="play notes 48 to 72 for %&apos;beats&apos; beats" type="command" category="sound"><header></header><code></code><translations></translations><inputs><input type="%n">0.5</input></inputs><script><custom-block s="play notes %mult%n for %n beats"><block s="reportNumbers"><l>48</l><l>72</l></block><block var="beats"/></custom-block></script></block-definition><block-definition s="note from %&apos;pitch&apos; hz" type="reporter" category="sound"><header></header><code></code><translations></translations><inputs><input type="%n">440</input></inputs><script><block s="doReport"><block s="reportRound"><block s="reportSum"><l>69</l><block s="reportProduct"><l>12</l><block s="reportQuotient"><block s="reportMonadic"><l><option>log</option></l><block s="reportQuotient"><block var="pitch"/><l>440</l></block></block><block s="reportMonadic"><l><option>log</option></l><l>2</l></block></block></block></block></block></block></script></block-definition><block-definition s="play note from %&apos;pitch&apos; hz for %&apos;beat&apos; beats" type="command" category="sound"><header></header><code></code><translations></translations><inputs><input type="%n">262</input><input type="%n">0.5</input></inputs><script><block s="doPlayNote"><custom-block s="note from %n hz"><block var="pitch"/></custom-block><block var="beat"/></block></script></block-definition><block-definition s="! %&apos;num&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">5</input></inputs><script><block s="doReport"><custom-block s="%upvar repeated function %n times at %s via %repRing"><l>v</l><block var="num"/><l>1</l><block s="reifyReporter"><autolambda><block s="reportProduct"><l></l><block var="v"/></block></autolambda><list></list></block></custom-block></block></script></block-definition><block-definition s="%&apos;this&apos; is one of %&apos;those&apos;" type="predicate" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%mult%s"></input></inputs><script><block s="doReport"><block s="reportListContainsItem"><block var="those"/><block var="this"/></block></block></script></block-definition><block-definition s="%&apos;id&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doReport"><block var="id"/></block></script></block-definition><block-definition s="%&apos;text&apos; %&apos;num&apos; times" type="reporter" category="operators"><comment x="0" y="0" w="157" collapsed="false">Repeats the same string x times without any space added</comment><header></header><code></code><translations></translations><inputs><input type="%s">do</input><input type="%n">2</input></inputs><script><block s="doReport"><custom-block s="%upvar repeated function %n times at %s via %repRing"><l>v</l><block var="num"/><l></l><block s="reifyReporter"><autolambda><block s="reportJoinWords"><list><l></l><block var="text"/></list></block></autolambda><list></list></block></custom-block></block></script></block-definition><block-definition s="%&apos;num&apos; %&apos;expression&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">4</input><input type="%s" readonly="true">squared<options>squared&#xD;cubed</options></input></inputs><script><block s="doReport"><custom-block s="%upvar repeated function %n times at %s via %repRing"><l>v</l><block s="reportListItem"><block s="reportListIndex"><block var="expression"/><block s="reportNewList"><list><l>squared</l><l>cubed</l></list></block></block><block s="reportNewList"><list><l>2</l><l>3</l></list></block></block><l>1</l><block s="reifyReporter"><autolambda><block s="reportProduct"><l></l><block var="num"/></block></autolambda><list></list></block></custom-block></block></script></block-definition><block-definition s="for each %&apos;letter&apos; of %&apos;text&apos; %&apos;action&apos;" type="command" category="operators"><header></header><code></code><translations></translations><inputs><input type="%upvar"></input><input type="%s"></input><input type="%ca"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>item</l><block s="reportTextSplit"><block var="text"/><l><option>letter</option></l></block><script><block s="doSetVar"><l>letter</l><block var="item"/></block><block s="doRun"><block var="action"/><list><block var="letter"/></list></block></script></block></script></block></script></block-definition><block-definition s="for each word of %&apos;text&apos; %&apos;action&apos;" type="command" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%ca"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>item</l><block s="reportTextSplit"><block var="text"/><l><option>word</option></l></block><script><block s="doRun"><block var="action"/><list><block var="item"/></list></block></script></block></script></block></script></block-definition><block-definition s="for each line of %&apos;text&apos; %&apos;action&apos;" type="command" category="operators"><header></header><code></code><translations></translations><inputs><input type="%mlt"></input><input type="%ca"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>item</l><block s="reportTextSplit"><block var="text"/><l><option>line</option></l></block><script><block s="doRun"><block var="action"/><list><block var="item"/></list></block></script></block></script></block></script></block-definition><block-definition s="%&apos;s1&apos; ≠ %&apos;s2&apos;" type="predicate" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%s"></input></inputs><script><block s="doReport"><block s="reportNot"><block s="reportEquals"><block var="s1"/><block var="s2"/></block></block></block></script></block-definition><block-definition s="%&apos;b1&apos; xor %&apos;b2&apos;" type="predicate" category="operators"><header></header><code></code><translations></translations><inputs><input type="%b"></input><input type="%b"></input></inputs><script><block s="doReport"><custom-block s="%s ≠ %s"><block var="b1"/><block var="b2"/></custom-block></block></script></block-definition><block-definition s="copy of %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>item</l><block var="list"/><script><block s="doAddToList"><l></l><block var="a"/></block></script></block><block s="doReport"><block var="a"/></block></script></block></script></block-definition><block-definition s="%&apos;list&apos; as text" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%l" readonly="true"><options>§_getVarNamesDict</options></input></inputs><script><block s="doReport"><custom-block s="join words %mult%s"><block var="list"/></custom-block></block></script></block-definition><block-definition s="join words %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%mult%s"></input></inputs><script><block s="doReport"><block s="reportAtomicCombine"><block var="text"/><block s="reifyReporter"><autolambda><block s="reportJoinWords"><list><l></l><l> </l><l></l></list></block></autolambda><list></list></block></block></block></script></block-definition><block-definition s="all but %&apos;num&apos; of %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%n">2<options>1&#xD;last&#xD;any</options></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><custom-block s="copy of %l"><block var="list"/></custom-block></block><block s="doIfElse"><block s="reportEquals"><block var="num"/><l>any</l></block><script><block s="doDeleteFromList"><block s="reportRandom"><l>1</l><block s="reportListLength"><block var="a"/></block></block><block var="a"/></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="num"/><l>last</l></block><script><block s="doDeleteFromList"><l><option>last</option></l><block var="a"/></block></script><script><block s="doDeleteFromList"><block var="num"/><block var="a"/></block></script></block></script></block><block s="doReport"><block var="a"/></block></script></block></script></block-definition><block-definition s="all but %&apos;num&apos; letter of %&apos;word&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">1<options>1&#xD;last&#xD;any</options></input><input type="%s">World</input></inputs><script><block s="doIfElse"><block s="reportEquals"><block var="num"/><l>any</l></block><script><block s="doReport"><custom-block s="all but %n letter of %s"><block s="reportRandom"><l>1</l><block s="reportStringSize"><block var="word"/></block></block><block var="word"/></custom-block></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="num"/><l>last</l></block><script><block s="doReport"><custom-block s="all but %n letter of %s"><block s="reportStringSize"><block var="word"/></block><block var="word"/></custom-block></block></script><script><block s="doReport"><custom-block s="%l as spaceless text"><custom-block s="all but %n of %l"><block var="num"/><block s="reportTextSplit"><block var="word"/><l><option>letter</option></l></block></custom-block></custom-block></block></script></block></script></block></script></block-definition><block-definition s="%&apos;list&apos; as spaceless text" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%l" readonly="true"><options>§_getVarNamesDict</options></input></inputs><script><block s="doReport"><block s="reportJoinWords"><block var="list"/></block></block></script></block-definition><block-definition s="all but %&apos;num&apos; word of %&apos;word&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">1<options>1&#xD;last&#xD;any</options></input><input type="%s">Build Your Own Blocks</input></inputs><script><block s="doIfElse"><block s="reportEquals"><block var="num"/><l>any</l></block><script><block s="doReport"><custom-block s="all but %n word of %s"><block s="reportRandom"><l>1</l><custom-block s="number of words in %s"><block var="word"/></custom-block></block><block var="word"/></custom-block></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="num"/><l>last</l></block><script><block s="doReport"><custom-block s="all but %n word of %s"><custom-block s="number of words in %s"><block var="word"/></custom-block><block var="word"/></custom-block></block></script><script><block s="doReport"><custom-block s="%l as text"><custom-block s="all but %n of %l"><block var="num"/><block s="reportTextSplit"><block var="word"/><l><option>word</option></l></block></custom-block></custom-block></block></script></block></script></block></script></block-definition><block-definition s="number of words in %&apos;word&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">Hello World</input></inputs><script><block s="doReport"><block s="reportListLength"><block s="reportTextSplit"><block var="word"/><l><option>word</option></l></block></block></block></script></block-definition><block-definition s="all but %&apos;num&apos; line of %&apos;word&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">1<options>1&#xD;last&#xD;any</options></input><input type="%mlt">Hello&#xD;How are you?&#xD;Are you okay?</input></inputs><script><block s="doIfElse"><block s="reportEquals"><block var="num"/><l>any</l></block><script><block s="doReport"><custom-block s="all but %n line of %mlt"><block s="reportRandom"><l>1</l><custom-block s="number of lines in %mlt"><block var="word"/></custom-block></block><block var="word"/></custom-block></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="num"/><l>last</l></block><script><block s="doReport"><custom-block s="all but %n line of %mlt"><custom-block s="number of lines in %mlt"><block var="word"/></custom-block><block var="word"/></custom-block></block></script><script><block s="doReport"><block s="reportAtomicCombine"><custom-block s="all but %n of %l"><block var="num"/><block s="reportTextSplit"><block var="word"/><l><option>line</option></l></block></custom-block><block s="reifyReporter"><autolambda><block s="reportJoinWords"><list><l></l><l>&#xD;</l><l></l></list></block></autolambda><list></list></block></block></block></script></block></script></block></script></block-definition><block-definition s="number of lines in %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%mlt">Hello&#xD;How are you?&#xD;Are you okay?</input></inputs><script><block s="doReport"><block s="reportListLength"><block s="reportTextSplit"><block var="text"/><l><option>line</option></l></block></block></block></script></block-definition><block-definition s="multiline %&apos;line&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%mlt"></input></inputs><script><block s="doReport"><block var="line"/></block></script></block-definition><block-definition s="sum %&apos;list&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><custom-block s="%upvar repeated function %n times at %s via %repRing"><l>v</l><block s="reportListLength"><block var="list"/></block><l>0</l><block s="reifyReporter"><autolambda><block s="reportSum"><l></l><block s="reportListItem"><block var="v"/><block var="list"/></block></block></autolambda><list></list></block></custom-block></block></script></block-definition><block-definition s="product %&apos;list&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><custom-block s="%upvar repeated function %n times at %s via %repRing"><l>v</l><block s="reportListLength"><block var="list"/></block><l>1</l><block s="reifyReporter"><autolambda><block s="reportProduct"><l></l><block s="reportListItem"><block var="v"/><block var="list"/></block></block></autolambda><list></list></block></custom-block></block></script></block-definition><block-definition s="average %&apos;nums&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%mult%n"></input></inputs><script><block s="doReport"><block s="reportQuotient"><custom-block s="sum %l"><block var="nums"/></custom-block><block s="reportListLength"><block var="nums"/></block></block></block></script></block-definition><block-definition s="combine with %&apos;repo&apos; over %&apos;text&apos;" type="reporter" category="operators"><comment x="0" y="0" w="220.99999999999994" collapsed="false">Like the built in combine block found in the list category but uses string instead of list</comment><header></header><code></code><translations></translations><inputs><input type="%repRing"></input><input type="%s">Hello World</input></inputs><script><block s="doReport"><block s="reportCombine"><block s="reportTextSplit"><block var="text"/><l><option>word</option></l></block><block var="repo"/></block></block></script></block-definition><block-definition s="vowel? %&apos;text&apos;" type="predicate" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">j</input></inputs><script><block s="doReport"><custom-block s="%s is one of %mult%s"><block s="reportLetter"><l>1</l><block var="text"/></block><list><l>a</l><l>e</l><l>i</l><l>o</l><l>u</l></list></custom-block></block></script></block-definition><block-definition s="constant? %&apos;text&apos;" type="predicate" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">a</input></inputs><script><block s="doReport"><block s="reportNot"><custom-block s="%s is one of %mult%s"><block s="reportLetter"><l>1</l><block var="text"/></block><list><l>a</l><l>e</l><l>i</l><l>o</l><l>u</l></list></custom-block></block></block></script></block-definition><block-definition s="empty? %&apos;text&apos;" type="predicate" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doReport"><block s="reportEquals"><block var="text"/><l></l></block></block></script></block-definition><block-definition s="keep letters %&apos;bool&apos; from %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%predRing"></input><input type="%s">World</input></inputs><script><block s="doReport"><custom-block s="%l as spaceless text"><block s="reportKeep"><block var="bool"/><block s="reportTextSplit"><block var="text"/><l><option>letter</option></l></block></block></custom-block></block></script></block-definition><block-definition s="keep words %&apos;bool&apos; from %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%predRing"></input><input type="%s">Hello World</input></inputs><script><block s="doReport"><custom-block s="%l as text"><block s="reportKeep"><block var="bool"/><block s="reportTextSplit"><block var="text"/><l><option>word</option></l></block></block></custom-block></block></script></block-definition><block-definition s="keep lines %&apos;bool&apos; from %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%predRing"></input><input type="%mlt">Hello&#xD;How are you?&#xD;Are you okay?</input></inputs><script><block s="doReport"><block s="reportAtomicCombine"><block s="reportKeep"><block var="bool"/><block s="reportTextSplit"><block var="text"/><l><option>line</option></l></block></block><block s="reifyReporter"><autolambda><block s="reportJoinWords"><list><l></l><l>&#xD;</l><l></l></list></block></autolambda><list></list></block></block></block></script></block-definition><block-definition s="find first word %&apos;bool&apos; in %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%predRing"></input><input type="%s">Hello World</input></inputs><script><block s="doReport"><block s="reportFindFirst"><block var="bool"/><block s="reportTextSplit"><block var="text"/><l><option>word</option></l></block></block></block></script></block-definition><block-definition s="find first line %&apos;bool&apos; in %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%predRing"></input><input type="%mlt">Hello&#xD;How are you?&#xD;Are you okay?</input></inputs><script><block s="doReport"><block s="reportFindFirst"><block var="bool"/><block s="reportTextSplit"><block var="text"/><l><option>line</option></l></block></block></block></script></block-definition><block-definition s="word %&apos;n&apos; of %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">1<options>1&#xD;last&#xD;any</options></input><input type="%s">Hello World</input></inputs><script><block s="doIfElse"><block s="reportEquals"><block var="n"/><l>any</l></block><script><block s="doReport"><block s="reportListItem"><l><option>any</option></l><block s="reportTextSplit"><block var="text"/><l><option>word</option></l></block></block></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="n"/><l>last</l></block><script><block s="doReport"><block s="reportListItem"><l><option>last</option></l><block s="reportTextSplit"><block var="text"/><l><option>word</option></l></block></block></block></script><script><block s="doReport"><block s="reportListItem"><block var="n"/><block s="reportTextSplit"><block var="text"/><l><option>word</option></l></block></block></block></script></block></script></block></script></block-definition><block-definition s="line %&apos;n&apos; of %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">1<options>1&#xD;last&#xD;any</options></input><input type="%mlt">Hello&#xD;How are you?&#xD;Are you okay?</input></inputs><script><block s="doIfElse"><block s="reportEquals"><block var="n"/><l>any</l></block><script><block s="doReport"><block s="reportListItem"><l><option>any</option></l><block s="reportTextSplit"><block var="text"/><l><option>line</option></l></block></block></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="n"/><l>last</l></block><script><block s="doReport"><block s="reportListItem"><l><option>last</option></l><block s="reportTextSplit"><block var="text"/><l><option>line</option></l></block></block></block></script><script><block s="doReport"><block s="reportListItem"><block var="n"/><block s="reportTextSplit"><block var="text"/><l><option>line</option></l></block></block></block></script></block></script></block></script></block-definition><block-definition s="items %&apos;num&apos; to %&apos;num2&apos; of %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%n">1</input><input type="%n">3</input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><block s="doFor"><l>i</l><block var="num"/><block var="num2"/><script><block s="doAddToList"><block s="reportListItem"><block var="i"/><block var="list"/></block><block var="result"/></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="letters %&apos;n1&apos; to %&apos;n2&apos; of %&apos;word&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">1</input><input type="%n">3</input><input type="%s">World</input></inputs><script><block s="doReport"><custom-block s="%l as spaceless text"><custom-block s="items %n to %n of %l"><block var="n1"/><block var="n2"/><block s="reportTextSplit"><block var="word"/><l><option>letter</option></l></block></custom-block></custom-block></block></script></block-definition><block-definition s="words %&apos;n1&apos; to %&apos;n2&apos; of %&apos;word&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">1</input><input type="%n">3</input><input type="%s">Hello to a new World</input></inputs><script><block s="doReport"><custom-block s="%l as text"><custom-block s="items %n to %n of %l"><block var="n1"/><block var="n2"/><block s="reportTextSplit"><block var="word"/><l><option>word</option></l></block></custom-block></custom-block></block></script></block-definition><block-definition s="lines %&apos;n1&apos; to %&apos;n2&apos; of %&apos;word&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">1</input><input type="%n">3</input><input type="%mlt">Hello&#xD;How are you?&#xD;Are you okay?&#xD;Why not?</input></inputs><script><block s="doReport"><block s="reportAtomicCombine"><custom-block s="items %n to %n of %l"><block var="n1"/><block var="n2"/><block s="reportTextSplit"><block var="word"/><l><option>line</option></l></block></custom-block><block s="reifyReporter"><autolambda><block s="reportJoinWords"><list><l></l><l>&#xD;</l><l></l></list></block></autolambda><list></list></block></block></block></script></block-definition><block-definition s="keep only numbers from %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">Windows 10</input></inputs><script><block s="doReport"><custom-block s="keep letters %predRing from %s"><block s="reifyPredicate"><autolambda><block s="reportIsA"><l></l><l><option>number</option></l></block></autolambda><list></list></block><block var="text"/></custom-block></block></script></block-definition><block-definition s="keep only text from %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">Windows 10</input></inputs><script><block s="doReport"><custom-block s="keep letters %predRing from %s"><block s="reifyPredicate"><autolambda><block s="reportIsA"><l></l><l><option>text</option></l></block></autolambda><list></list></block><block var="text"/></custom-block></block></script></block-definition><block-definition s="reduce list %&apos;list&apos; using %&apos;repo&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%l">5 10 4</input><input type="%repRing"></input></inputs><script><block s="doWarp"><script><block s="doIfElse"><block s="reportListIsEmpty"><block s="reportCDR"><block var="list"/></block></block><script><block s="doReport"><block s="reportListItem"><l>1</l><block var="list"/></block></block></script><script><block s="doReport"><block s="evaluate"><block var="repo"/><list><block s="reportListItem"><l>1</l><block var="list"/></block><custom-block s="reduce list %l using %repRing"><block s="reportCDR"><block var="list"/></block><block var="repo"/></custom-block><block s="reportListItem"><l>1</l><block s="reportCDR"><block var="list"/></block></block></list></block></block></script></block></script></block></script></block-definition><block-definition s="reduce string %&apos;text&apos; using %&apos;repo&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">5 10 4</input><input type="%repRing"></input></inputs><script><block s="doReport"><custom-block s="reduce list %l using %repRing"><block s="reportTextSplit"><block var="text"/><l><option>word</option></l></block><block var="repo"/></custom-block></block></script></block-definition><block-definition s="latin %&apos;latin&apos; as number" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">MDCLXVI</input></inputs><script><block s="doReport"><custom-block s="reduce list %l using %repRing"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>1</l><block s="reportCDR"><block s="reportFindFirst"><block s="reifyPredicate"><autolambda><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="each pair"/></block><block var="each letter"/></block></autolambda><list><l>each pair</l></list></block><block s="reportNewList"><list><block s="reportNewList"><list><l>I</l><l>1</l></list></block><block s="reportNewList"><list><l>V</l><l>5</l></list></block><block s="reportNewList"><list><l>X</l><l>10</l></list></block><block s="reportNewList"><list><l>L</l><l>50</l></list></block><block s="reportNewList"><list><l>C</l><l>100</l></list></block><block s="reportNewList"><list><l>D</l><l>500</l></list></block><block s="reportNewList"><list><l>M</l><l>1000</l></list></block></list></block></block></block></block></autolambda><list><l>each letter</l></list></block><block s="reportTextSplit"><block var="latin"/><l><option>letter</option></l></block></block><block s="reifyReporter"><autolambda><block s="reportIfElse"><block s="reportLessThan"><block var="#1"/><block var="next"/></block><block s="reportSum"><block s="reportDifference"><block var="next"/><block var="#1"/></block><block s="reportDifference"><block var="#2"/><block var="next"/></block></block><block s="reportSum"><block var="#1"/><block var="#2"/></block></block></autolambda><list><l>#1</l><l>#2</l><l>next</l></list></block></custom-block></block></script></block-definition><block-definition s="map %&apos;repo&apos; over string %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%repRing"></input><input type="%s">Hello World</input></inputs><script><block s="doReport"><custom-block s="%l as text"><block s="reportMap"><block var="repo"/><block s="reportTextSplit"><block var="text"/><l><option>word</option></l></block></block></custom-block></block></script></block-definition><block-definition s="Am I a clone?" type="predicate" category="sensing"><comment x="0" y="0" w="254.00000000000006" collapsed="false">Returns true if sprite&apos;s parent is an object.</comment><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportIsA"><block s="reportGet"><l><option>parent</option></l></block><l><option>sprite</option></l></block></block></script></block-definition><block-definition s="is %&apos;n1&apos; divisble by %&apos;n2&apos; ?" type="predicate" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">4</input><input type="%n">2</input></inputs><script><block s="doReport"><block s="reportEquals"><l>0</l><block s="reportModulus"><block var="n1"/><block var="n2"/></block></block></block></script></block-definition><block-definition s="nabs %&apos;num&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">10</input></inputs><script><block s="doReport"><block s="reportMonadic"><l><option>neg</option></l><block s="reportMonadic"><l><option>abs</option></l><block var="num"/></block></block></block></script></block-definition><block-definition s="%&apos;n1&apos; E %&apos;n2&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n"></input><input type="%n"></input></inputs><script><block s="doReport"><block s="reportProduct"><block var="n1"/><block s="reportPower"><l>10</l><block var="n2"/></block></block></block></script></block-definition><block-definition s="%&apos;root&apos; root of %&apos;num&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">2</input><input type="%n">64</input></inputs><script><block s="doReport"><block s="reportPower"><block s="reportMonadic"><l><option>abs</option></l><block var="num"/></block><block s="reportQuotient"><l>1</l><block var="root"/></block></block></block></script></block-definition><block-definition s="reverse %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><custom-block s="items %n to %n of %l"><block s="reportListLength"><block var="list"/></block><l>1</l><block var="list"/></custom-block></block></script></block-definition><block-definition s="%&apos;list&apos; reversed" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">World</input></inputs><script><block s="doReport"><custom-block s="%l as spaceless text"><custom-block s="reverse %l"><block s="reportTextSplit"><block var="list"/><l><option>letter</option></l></block></custom-block></custom-block></block></script></block-definition><block-definition s="newline" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><l>&#xD;</l></block></script></block-definition><block-definition s="find %&apos;search&apos; in %&apos;string&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">Your</input><input type="%s">Build Your Own Blocks</input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>comparison idx</l><l>found pos</l><l>loop idx</l></list></block><block s="doSetVar"><l>comparison idx</l><l>0</l></block><block s="doSetVar"><l>found pos</l><l>0</l></block><block s="doSetVar"><l>loop idx</l><l>0</l></block><block s="doUntil"><block s="reportOr"><block s="reportGreaterThan"><block var="found pos"/><l>0</l></block><block s="reportGreaterThan"><block var="loop idx"/><block s="reportDifference"><block s="reportStringSize"><block var="string"/></block><block s="reportStringSize"><block var="search"/></block></block></block></block><script><block s="doChangeVar"><l>loop idx</l><l>1</l></block><block s="doSetVar"><l>comparison idx</l><l>1</l></block><block s="doUntil"><block s="reportOr"><block s="reportNot"><block s="reportEquals"><block s="reportLetter"><block var="comparison idx"/><block var="search"/></block><block s="reportLetter"><block s="reportSum"><block s="reportDifference"><block var="loop idx"/><l>1</l></block><block var="comparison idx"/></block><block var="string"/></block></block></block><block s="reportEquals"><block var="comparison idx"/><block s="reportSum"><block s="reportStringSize"><block var="search"/></block><l>1</l></block></block></block><script><block s="doChangeVar"><l>comparison idx</l><l>1</l></block></script></block><block s="doIf"><block s="reportEquals"><block var="comparison idx"/><block s="reportSum"><block s="reportStringSize"><block var="search"/></block><l>1</l></block></block><script><block s="doSetVar"><l>found pos</l><block var="loop idx"/></block></script></block></script></block><block s="doReport"><block var="found pos"/></block></script></block></script></block-definition><block-definition s="%&apos;text&apos; %&apos;type&apos; %&apos;text2&apos;" type="predicate" category="operators"><comment x="0" y="0" w="298" collapsed="false">CONTAINS = True if the 2nd string is included in the 1st one&#xD;STARTS WITH = True if the 1st string starts with the 2nd one&#xD;ENDS WITH = True if the 1st string ends with the 2nd one</comment><header></header><code></code><translations></translations><inputs><input type="%s">raincoat</input><input type="%s" readonly="true">contains<options>contains&#xD;starts with&#xD;ends with</options></input><input type="%s">coat</input></inputs><script><block s="doReport"><block s="reportListItem"><block s="reportListIndex"><block var="type"/><block s="reportNewList"><list><l>contains</l><l>starts with</l><l>ends with</l></list></block></block><block s="reportNewList"><list><custom-block s="%s ≠ %s"><custom-block s="find %s in %s"><block var="text2"/><block var="text"/></custom-block><l>0</l></custom-block><block s="reportEquals"><custom-block s="find %s in %s"><block var="text2"/><block var="text"/></custom-block><l>1</l></block><block s="reportEquals"><custom-block s="letters %n to %n of %s"><block s="reportSum"><block s="reportDifference"><block s="reportStringSize"><block var="text"/></block><block s="reportStringSize"><block var="text2"/></block></block><l>1</l></block><block s="reportStringSize"><block var="text"/></block><block var="text"/></custom-block><block var="text2"/></block></list></block></block></block></script></block-definition><block-definition s="times %&apos;tex&apos; in %&apos;word&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">w</input><input type="%s">World</input></inputs><script><block s="doIfElse"><custom-block s="empty? %s"><custom-block s="all but %n letter of %s"><l>1</l><block var="tex"/></custom-block></custom-block><script><block s="doReport"><block s="reportStringSize"><custom-block s="keep letters %predRing from %s"><block s="reifyPredicate"><autolambda><block s="reportEquals"><l></l><block var="tex"/></block></autolambda><list></list></block><block var="word"/></custom-block></block></block></script><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l><l>v</l></list></block><block s="doSetVar"><l>result</l><l>0</l></block><block s="doSetVar"><l>v</l><l>0</l></block><block s="doUntil"><block s="reportGreaterThan"><block var="v"/><block s="reportStringSize"><block var="word"/></block></block><script><block s="doChangeVar"><l>v</l><l>1</l></block><block s="doIf"><block s="reportEquals"><block var="tex"/><custom-block s="letters %n to %n of %s"><block var="v"/><block s="reportSum"><block var="v"/><block s="reportDifference"><block s="reportStringSize"><block var="tex"/></block><l>1</l></block></block><block var="word"/></custom-block></block><script><block s="doChangeVar"><l>result</l><l>1</l></block><block s="doChangeVar"><l>v</l><block s="reportDifference"><block s="reportStringSize"><block var="tex"/></block><l>1</l></block></block></script></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block></script></block-definition><block-definition s="replace every %&apos;t1&apos; in %&apos;t2&apos; with %&apos;t3&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">a</input><input type="%s">cat</input><input type="%s">u</input></inputs><script><block s="doIfElse"><custom-block s="empty? %s"><custom-block s="all but %n letter of %s"><l>1</l><block var="t1"/></custom-block></custom-block><script><block s="doReport"><custom-block s="%l as spaceless text"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportIfElse"><block s="reportEquals"><l></l><block var="t1"/></block><block var="t3"/><l></l></block></autolambda><list></list></block><block s="reportTextSplit"><block var="t2"/><l><option>letter</option></l></block></block></custom-block></block></script><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l><l>v</l></list></block><block s="doSetVar"><l>v</l><l>0</l></block><block s="doSetVar"><l>result</l><l></l></block><block s="doUntil"><block s="reportGreaterThan"><block var="v"/><block s="reportStringSize"><block var="t2"/></block></block><script><block s="doChangeVar"><l>v</l><l>1</l></block><block s="doIfElse"><block s="reportEquals"><block var="t1"/><custom-block s="letters %n to %n of %s"><block var="v"/><block s="reportSum"><block var="v"/><block s="reportDifference"><block s="reportStringSize"><block var="t1"/></block><l>1</l></block></block><block var="t2"/></custom-block></block><script><block s="doSetVar"><l>result</l><block s="reportJoinWords"><list><block var="result"/><block var="t3"/></list></block></block><block s="doChangeVar"><l>v</l><block s="reportDifference"><block s="reportStringSize"><block var="t1"/></block><l>1</l></block></block></script><script><block s="doSetVar"><l>result</l><block s="reportJoinWords"><list><block var="result"/><block s="reportLetter"><block var="v"/><block var="t2"/></block></list></block></block></script></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block></script></block-definition><block-definition s="erase any %&apos;t1&apos; from %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">a</input><input type="%s">deapplay</input></inputs><script><block s="doReport"><custom-block s="replace every %s in %s with %s"><block var="t1"/><block var="text"/><l></l></custom-block></block></script></block-definition><block-definition s="convert %&apos;multiline&apos; to single-line by joining them with %&apos;sep&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%mlt">Hello&#xD;How are you?&#xD;Are you okay?</input><input type="%s">-</input></inputs><script><block s="doReport"><custom-block s="replace every %s in %s with %s"><custom-block s="newline"></custom-block><block var="multiline"/><block var="sep"/></custom-block></block></script></block-definition><block-definition s="%&apos;kind&apos; number of %&apos;num&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">prime<options>prime&#xD;even</options></input><input type="%n">2</input></inputs><script><block s="doReport"><block s="reportIfElse"><custom-block s="is %n divisble by %n ?"><block var="num"/><l>2</l></custom-block><block s="reportIfElse"><block s="reportEquals"><block var="kind"/><l>even</l></block><block var="num"/><block s="reportSum"><block var="num"/><l>1</l></block></block><block s="reportIfElse"><custom-block s="%s ≠ %s"><block var="kind"/><l>even</l></custom-block><block var="num"/><block s="reportSum"><block var="num"/><l>1</l></block></block></block></block></script></block-definition><block-definition s="%&apos;num1&apos; %&apos;kind&apos; %&apos;num2&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">8</input><input type="%s" readonly="true">min<options>min&#xD;max</options></input><input type="%n">12</input></inputs><script><block s="doReport"><block s="reportIfElse"><block s="reportLessThan"><block var="num1"/><block var="num2"/></block><block s="reportIfElse"><block s="reportEquals"><l>min</l><block var="kind"/></block><block var="num1"/><block var="num2"/></block><block s="reportIfElse"><block s="reportEquals"><l>max</l><block var="kind"/></block><block var="num1"/><block var="num2"/></block></block></block></script></block-definition><block-definition s="position of %&apos;num&apos; within %&apos;num1&apos; and %&apos;num2&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">11</input><input type="%n">1</input><input type="%n">10</input></inputs><script><block s="doReport"><custom-block s="%n %s %n"><custom-block s="%n %s %n"><block var="num"/><l>max</l><block var="num1"/></custom-block><l>min</l><block var="num2"/></custom-block></block></script></block-definition><block-definition s="shuffle %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>item</l><block var="list"/><script><block s="doInsertInList"><block var="item"/><l><option>any</option></l><block var="a"/></block></script></block><block s="doReport"><block var="a"/></block></script></block></script></block-definition><block-definition s="randomize %&apos;word&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">World</input></inputs><script><block s="doReport"><custom-block s="%l as spaceless text"><custom-block s="shuffle %l"><block s="reportTextSplit"><block var="word"/><l><option>letter</option></l></block></custom-block></custom-block></block></script></block-definition><block-definition s="reverse pen writing" type="command" category="pen"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doIfElse"><block s="getPenDown"></block><script><block s="up"></block></script><script><block s="down"></block></script></block></script></block-definition><block-definition s="stamp transparent %&apos;num&apos;" type="command" category="pen"><header></header><code></code><translations></translations><inputs><input type="%n">50</input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><block s="getEffect"><l><option>ghost</option></l></block></block><block s="setEffect"><l><option>ghost</option></l><block var="num"/></block><block s="doStamp"></block><block s="setEffect"><l><option>ghost</option></l><block var="a"/></block></script></block></script></block-definition><block-definition s="run %&apos;script&apos; with pen down" type="command" category="pen"><header></header><code></code><translations></translations><inputs><input type="%cs"></input></inputs><script><block s="down"></block><block s="doRun"><block var="script"/><list></list></block><block s="up"></block></script></block-definition><block-definition s="trigular pillar sized %&apos;size&apos; at %&apos;dpi&apos; dpi with %&apos;pen&apos; size" type="command" category="pen"><header></header><code></code><translations></translations><inputs><input type="%n">128</input><input type="%n">96</input><input type="%n">1</input></inputs><script><block s="doDeclareVariables"><list><l>a</l><l>b</l></list></block><block s="doWarp"><script><block s="doSetVar"><l>a</l><block s="getPenAttribute"><l><option>brightness</option></l></block></block><block s="doSetVar"><l>b</l><block s="getPenAttribute"><l><option>size</option></l></block></block><block s="setSize"><block var="pen"/></block><block s="setPenHSVA"><l><option>brightness</option></l><l>0</l></block><block s="gotoXY"><l>0</l><l>0</l></block><block s="setHeading"><l>90</l></block><block s="clear"></block><block s="hide"></block></script></block><custom-block s="run %cs with pen down"><script><custom-block s="for each %upvar in %n %cs"><l>unit</l><block s="reportProduct"><block var="size"/><block s="reportQuotient"><custom-block s="size for %n DPI"><block var="dpi"/></custom-block><l>100</l></block></block><script><block s="changePenHSVA"><l><option>brightness</option></l><block s="reportIfElse"><block s="reportEquals"><block s="getPenAttribute"><l><option>brightness</option></l></block><l>100</l></block><l>-100</l><block s="reportQuotient"><l>1</l><block s="reportQuotient"><custom-block s="size for %n DPI"><block var="dpi"/></custom-block><l>100</l></block></block></block></block><block s="turn"><l>92</l></block><block s="forward"><block s="reportQuotient"><block var="unit"/><block s="reportQuotient"><custom-block s="size for %n DPI"><block var="dpi"/></custom-block><l>100</l></block></block></block></script></custom-block></script></custom-block><block s="setSize"><block var="b"/></block><block s="setPenHSVA"><l><option>brightness</option></l><block var="a"/></block><block s="show"></block></script></block-definition><block-definition s="%&apos;num&apos; copies of %&apos;text&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%n">2</input><input type="%s">text</input></inputs><script><block s="doReport"><custom-block s="%upvar repeated function %n times at %s via %repRing"><l>v</l><block var="num"/><block s="reportNewList"><list></list></block><block s="reifyReporter"><autolambda><block s="reportCONS"><block s="reportIfElse"><block s="reportIsA"><block var="text"/><l><option>list</option></l></block><custom-block s="copy of %l"><block var="text"/></custom-block><block var="text"/></block><l/></block></autolambda><list></list></block></custom-block></block></script></block-definition><block-definition s="clean %&apos;items&apos; from %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%mult%s"></input><input type="%l"></input></inputs><script><block s="doReport"><block s="reportAtomicKeep"><block s="reifyPredicate"><autolambda><block s="reportNot"><block s="reportListContainsItem"><block var="items"/><l></l></block></block></autolambda><list></list></block><block var="list"/></block></block></script></block-definition><block-definition s="keep %&apos;items&apos; from %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%mult%s"></input><input type="%l"></input></inputs><script><block s="doReport"><block s="reportAtomicKeep"><block s="reifyPredicate"><autolambda><block s="reportListContainsItem"><block var="items"/><l></l></block></autolambda><list></list></block><block var="list"/></block></block></script></block-definition><block-definition s="amount of %&apos;item&apos; in %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%s">item</input><input type="%l"></input></inputs><script><block s="doReport"><block s="reportListLength"><custom-block s="keep %mult%s from %l"><list><block var="item"/></list><block var="list"/></custom-block></block></block></script></block-definition><block-definition s="clean empty items from %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><custom-block s="clean %mult%s from %l"><list><l></l></list><block var="list"/></custom-block></block></script></block-definition><block-definition s="%&apos;list&apos; is only of lists" type="predicate" category="lists"><comment x="0" y="0" w="162" collapsed="false">Returns true if the same list without any sub-lists is empty</comment><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><block s="reportListIsEmpty"><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportNot"><block s="reportIsA"><l></l><l><option>list</option></l></block></block></autolambda><list></list></block><block var="list"/></block></block></block></script></block-definition><block-definition s="%&apos;list&apos; does not contain any list" type="predicate" category="lists"><comment x="0" y="0" w="162" collapsed="false">Returns true if the list does not include any sub-list</comment><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><block s="reportListIsEmpty"><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportIsA"><l></l><l><option>list</option></l></block></autolambda><list></list></block><block var="list"/></block></block></block></script></block-definition><block-definition s="%&apos;lists&apos; do not conatin any list" type="predicate" category="lists"><header></header><code></code><translations></translations><inputs><input type="%mult%l"></input></inputs><script><block s="doReport"><custom-block s="%upvar repeated function %n times at %s via %repRing"><l>v</l><block s="reportListLength"><block var="lists"/></block><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><block s="reportAnd"><l/><custom-block s="%l does not contain any list"><block s="reportListItem"><block var="v"/><block var="lists"/></block></custom-block></block></autolambda><list></list></block></custom-block></block></script></block-definition><block-definition s="topsy-turvy %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><block s="reportMap"><block s="reifyReporter"><autolambda><custom-block s="%s reversed"><l></l></custom-block></autolambda><list></list></block><custom-block s="reverse %l"><block var="list"/></custom-block></block></block></script></block-definition><block-definition s="crossproduct %&apos;lists&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%mult%l"></input></inputs><script><block s="doWarp"><script><block s="doIfElse"><block s="reportListIsEmpty"><block s="reportCDR"><block var="lists"/></block></block><script><block s="doReport"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportNewList"><list><l></l></list></block></autolambda><list></list></block><block s="reportListItem"><l>1</l><block var="lists"/></block></block></block></script><script><block s="doReport"><block s="reportCombine"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportCONS"><block var="adjoin"/><l/></block></autolambda><list></list></block><custom-block s="crossproduct %mult%l"><block s="reportCDR"><block var="lists"/></block></custom-block></block></autolambda><list><l>adjoin</l></list></block><block s="reportListItem"><l>1</l><block var="lists"/></block></block><block s="reifyReporter"><autolambda><block s="reportConcatenatedLists"><list><l/><l/></list></block></autolambda><list></list></block></block></block></script></block></script></block></script></block-definition><block-definition s="crossmap %&apos;repo&apos; over %&apos;lists&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%repRing"></input><input type="%mult%l"></input></inputs><script><block s="doReport"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="evaluate"><block var="repo"/><block var="value"/></block></autolambda><list><l>value</l></list></block><custom-block s="crossproduct %mult%l"><block var="lists"/></custom-block></block></block></script></block-definition><block-definition s="clean duplicats from %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><custom-block s="reverse %l"><custom-block s="%upvar repeated function %n times at %s via %repRing"><l>v</l><block s="reportListLength"><block var="list"/></block><block s="reportNewList"><list></list></block><block s="reifyReporter"><autolambda><block s="reportIfElse"><block s="reportListContainsItem"><l/><block s="reportListItem"><block var="v"/><block var="list"/></block></block><l></l><block s="reportCONS"><block s="reportListItem"><block var="v"/><block var="list"/></block><l/></block></block></autolambda><list></list></block></custom-block></custom-block></block></script></block-definition><block-definition s="exclude %&apos;items&apos; from %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%mult%n"></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l></list></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><custom-block s="for each %upvar in %n %cs"><l>v</l><block s="reportListLength"><block var="list"/></block><script><block s="doIf"><block s="reportNot"><block s="reportListContainsItem"><block var="items"/><block var="v"/></block></block><script><block s="doAddToList"><block s="reportListItem"><block var="v"/><block var="list"/></block><block var="result"/></block></script></block></script></custom-block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="swap items %&apos;i1&apos; and %&apos;i2&apos; from %&apos;list&apos;" type="command" category="lists"><header></header><code></code><translations></translations><inputs><input type="%n">1</input><input type="%n">2</input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>a</l><l>b</l></list></block><block s="doSetVar"><l>a</l><block s="reportListItem"><block var="i1"/><block var="list"/></block></block><block s="doSetVar"><l>b</l><block s="reportListItem"><block var="i2"/><block var="list"/></block></block><block s="doReplaceInList"><block var="i2"/><block var="list"/><block var="a"/></block><block s="doReplaceInList"><block var="i1"/><block var="list"/><block var="b"/></block></script></block-definition><block-definition s="items %&apos;i1&apos; and %&apos;i2&apos; from %&apos;list&apos; swapped" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%n">1</input><input type="%n">2</input><input type="%l"></input></inputs><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><custom-block s="copy of %l"><block var="list"/></custom-block></block><custom-block s="swap items %n and %n from %l"><block var="i1"/><block var="i2"/><block var="a"/></custom-block><block s="doReport"><block var="a"/></block></script></block-definition><block-definition s="send %&apos;list1&apos; to %&apos;list2&apos;" type="command" category="lists"><comment x="0" y="0" w="174" collapsed="false">Sens every item from the 1st list in the 2nd ones</comment><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>item</l><custom-block s="copy of %l"><block var="list1"/></custom-block><script><block s="doAddToList"><block var="item"/><block var="list2"/></block></script></block></script></block></script></block-definition><block-definition s="replace item %&apos;item&apos; of %&apos;list&apos; with %&apos;thing&apos;" type="command" category="lists"><header></header><code></code><translations></translations><inputs><input type="%s">item</input><input type="%l"></input><input type="%s">thing</input></inputs><script><block s="doWarp"><script><custom-block s="while %boolUE %ca"><block s="reportListContainsItem"><block var="list"/><block var="item"/></block><script><block s="doReplaceInList"><block s="reportListIndex"><block var="item"/><block var="list"/></block><block var="list"/><block var="thing"/></block></script></custom-block></script></block></script></block-definition><block-definition s="remove %&apos;item&apos; from %&apos;list&apos;" type="command" category="lists"><header></header><code></code><translations></translations><inputs><input type="%s">thing</input><input type="%l"></input></inputs><script><block s="doWarp"><script><custom-block s="while %boolUE %ca"><block s="reportListContainsItem"><block var="list"/><block var="item"/></block><script><block s="doDeleteFromList"><block s="reportListIndex"><block var="item"/><block var="list"/></block><block var="list"/></block></script></custom-block></script></block></script></block-definition><block-definition s="remove items %&apos;items&apos; from %&apos;list&apos;" type="command" category="lists"><header></header><code></code><translations></translations><inputs><input type="%mult%n"></input><input type="%l"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><custom-block s="exclude %mult%n from %l"><block var="items"/><block var="list"/></custom-block></block><block s="doDeleteFromList"><l><option>all</option></l><block var="list"/></block><custom-block s="send %l to %l"><block var="a"/><block var="list"/></custom-block></script></block></script></block-definition><block-definition s="add items %&apos;i1&apos; to %&apos;i2&apos; of %&apos;list1&apos; to %&apos;list2&apos;" type="command" category="lists"><header></header><code></code><translations></translations><inputs><input type="%n">1</input><input type="%n">3</input><input type="%l"></input><input type="%l"></input></inputs><script><custom-block s="send %l to %l"><custom-block s="items %n to %n of %l"><block var="i1"/><block var="i2"/><block var="list1"/></custom-block><block var="list2"/></custom-block></script></block-definition><block-definition s="move %&apos;num&apos; steps towards %&apos;sprite&apos;" type="command" category="motion"><header></header><code></code><translations></translations><inputs><input type="%n">10</input><input type="%s" readonly="true"><options>§_objectsMenu</options></input></inputs><script><custom-block s="move %n steps in direction %n"><block var="num"/><custom-block s="%s to x: %n y: %n"><l>direction</l><block s="reportAttributeOf"><l><option>x position</option></l><block var="sprite"/></block><block s="reportAttributeOf"><l><option>y position</option></l><block var="sprite"/></block></custom-block></custom-block></script></block-definition><block-definition s="compose %&apos;rep1&apos; %&apos;rep2&apos;" type="reporter" category="control"><header></header><code></code><translations></translations><inputs><input type="%repRing"></input><input type="%repRing"></input></inputs><script><block s="doReport"><block s="reifyReporter"><autolambda><block s="evaluate"><block var="rep1"/><list><block s="evaluate"><block var="rep2"/><list><l></l></list></block></list></block></autolambda><list></list></block></block></script></block-definition><block-definition s="command my %&apos;kind&apos; parent to %&apos;action&apos;" type="command" category="control"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">main<options>main&#xD;root</options></input><input type="%cs"></input></inputs><script><block s="doIfElse"><block s="reportEquals"><block var="kind"/><l>root</l></block><script><block s="doTellTo"><custom-block s="root object"></custom-block><block var="action"/><list></list></block></script><script><block s="doTellTo"><block s="reportIfElse"><custom-block s="Am I a clone?"></custom-block><block s="reportGet"><l><option>parent</option></l></block><block s="reportObject"><l><option>myself</option></l></block></block><block var="action"/><list></list></block></script></block></script></block-definition><block-definition s="toggle visibleness" type="command" category="looks"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doIfElse"><block s="reportShown"></block><script><block s="hide"></block></script><script><block s="show"></block></script></block></script></block-definition><block-definition s="map %&apos;repo&apos; over multiline %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%repRing"></input><input type="%mlt">Hello&#xD;How are you?&#xD;Are you okay?</input></inputs><script><block s="doReport"><block s="reportAtomicCombine"><custom-block s="clean %mult%s from %l"><list><l></l></list><block s="reportMap"><block var="repo"/><block s="reportTextSplit"><block var="text"/><l><option>line</option></l></block></block></custom-block><block s="reifyReporter"><autolambda><block s="reportJoinWords"><list><l></l><l>&#xD;</l><l></l></list></block></autolambda><list></list></block></block></block></script></block-definition><block-definition s="number between %&apos;n1&apos; and %&apos;n2&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">2</input><input type="%n">4</input></inputs><script><block s="doReport"><block s="reportQuotient"><block s="reportSum"><block var="n1"/><block var="n2"/></block><l>2</l></block></block></script></block-definition><block-definition s="%&apos;type&apos; string %&apos;string&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">uppercase<options>uppercase&#xD;lowercase&#xD;capitalize&#xD;lined capitalize&#xD;full capitalize</options></input><input type="%s">Pink girl</input></inputs><script><block s="doWarp"><script><block s="doIfElse"><block s="reportEquals"><block var="type"/><l>uppercase</l></block><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>text</l></list><l>return text.toLocaleUpperCase();</l></block><list><block var="string"/></list></block></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="type"/><l>lowercase</l></block><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>text</l></list><l>return text.toLocaleLowerCase();</l></block><list><block var="string"/></list></block></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="type"/><l>capitalize</l></block><script><block s="doReport"><block s="reportJoinWords"><list><custom-block s="%s string %s"><l>uppercase</l><block s="reportLetter"><l>1</l><block var="string"/></block></custom-block><custom-block s="all but %n letter of %s"><l>1</l><block var="string"/></custom-block></list></block></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="type"/><l>lined capitalize</l></block><script><block s="doReport"><custom-block s="map %repRing over multiline %mlt"><block s="reifyReporter"><autolambda><custom-block s="%s string %s"><l>capitalize</l><l></l></custom-block></autolambda><list></list></block><block var="string"/></custom-block></block></script><script><block s="doIfElse"><block s="reportEquals"><block var="type"/><l>full capitalize</l></block><script><block s="doReport"><custom-block s="map %repRing over multiline %mlt"><block s="reifyReporter"><autolambda><custom-block s="map %repRing over string %s"><block s="reifyReporter"><autolambda><custom-block s="%s string %s"><l>capitalize</l><l></l></custom-block></autolambda><list></list></block><l></l></custom-block></autolambda><list></list></block><block var="string"/></custom-block></block></script><script><block s="doReport"><block var="string"/></block></script></block></script></block></script></block></script></block></script></block></script></block></script></block-definition><block-definition s="%&apos;num&apos; as %&apos;type&apos; value" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">0A</input><input type="%s" readonly="true">numerical<options>numerical&#xD;hexademical</options></input></inputs><script><block s="doIfElse"><block s="reportEquals"><block var="type"/><l>numerical</l></block><script><block s="doReport"><block s="reportSum"><block s="reportProduct"><block s="reportListItem"><block s="reportListIndex"><block s="reportLetter"><l>1</l><block var="num"/></block><block s="reportNewList"><list><l>0</l><l>1</l><l>2</l><l>3</l><l>4</l><l>5</l><l>6</l><l>7</l><l>8</l><l>9</l><l>A</l><l>B</l><l>C</l><l>D</l><l>E</l><l>F</l></list></block></block><block s="reportNewList"><list><l>0</l><l>1</l><l>2</l><l>3</l><l>4</l><l>5</l><l>6</l><l>7</l><l>8</l><l>9</l><l>10</l><l>11</l><l>12</l><l>13</l><l>14</l><l>15</l></list></block></block><l>16</l></block><block s="reportListItem"><block s="reportListIndex"><block s="reportLetter"><l>2</l><block var="num"/></block><block s="reportNewList"><list><l>0</l><l>1</l><l>2</l><l>3</l><l>4</l><l>5</l><l>6</l><l>7</l><l>8</l><l>9</l><l>A</l><l>B</l><l>C</l><l>D</l><l>E</l><l>F</l></list></block></block><block s="reportNewList"><list><l>0</l><l>1</l><l>2</l><l>3</l><l>4</l><l>5</l><l>6</l><l>7</l><l>8</l><l>9</l><l>10</l><l>11</l><l>12</l><l>13</l><l>14</l><l>15</l></list></block></block></block></block></script><script><block s="doReport"><block s="reportJoinWords"><list><block s="reportListItem"><block s="reportSum"><l>1</l><block s="reportMonadic"><l><option>floor</option></l><block s="reportQuotient"><custom-block s="position of %n within %n and %n"><block var="num"/><l>0</l><l>255</l></custom-block><l>16</l></block></block></block><block s="reportNewList"><list><l>0</l><l>1</l><l>2</l><l>3</l><l>4</l><l>5</l><l>6</l><l>7</l><l>8</l><l>9</l><l>A</l><l>B</l><l>C</l><l>D</l><l>E</l><l>F</l></list></block></block><block s="reportListItem"><block s="reportSum"><l>1</l><block s="reportModulus"><block s="reportRound"><custom-block s="position of %n within %n and %n"><block var="num"/><l>0</l><l>255</l></custom-block></block><l>16</l></block></block><block s="reportNewList"><list><l>0</l><l>1</l><l>2</l><l>3</l><l>4</l><l>5</l><l>6</l><l>7</l><l>8</l><l>9</l><l>A</l><l>B</l><l>C</l><l>D</l><l>E</l><l>F</l></list></block></block></list></block></block></script></block></script></block-definition><block-definition s="shadow stamp x: %&apos;x&apos; y: %&apos;y&apos; size: %&apos;size&apos; opacity: %&apos;opacity&apos;" type="command" category="pen"><header></header><code></code><translations></translations><inputs><input type="%n">10</input><input type="%n">10</input><input type="%n">0</input><input type="%n">100</input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>size2</l><l>poes</l><l>c</l></list></block><block s="doSetVar"><l>size2</l><block s="getScale"></block></block><block s="doSetVar"><l>poes</l><custom-block s="position"></custom-block></block><block s="doSetVar"><l>c</l><block s="getEffect"><l><option>brightness</option></l></block></block><block s="changeXPosition"><block var="x"/></block><block s="changeYPosition"><block s="reportDifference"><l></l><block var="y"/></block></block><block s="changeScale"><block var="size"/></block><block s="setEffect"><l><option>brightness</option></l><l>-1000</l></block><custom-block s="stamp transparent %n"><block s="reportDifference"><l>100</l><block var="opacity"/></block></custom-block><block s="doGotoObject"><block var="poes"/></block><block s="setScale"><block var="size2"/></block><block s="setEffect"><l><option>brightness</option></l><block var="c"/></block></script></block></script></block-definition><block-definition s="cs %&apos;t1&apos; = %&apos;t2&apos;" type="predicate" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%s"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>txt</l><l>t2</l></list><l>return (txt === t2)</l></block><list><block var="t1"/><block var="t2"/></list></block></block></script></block-definition><block-definition s="%&apos;list&apos; broken in %&apos;num&apos; pieces" type="reporter" category="lists"><comment x="0" y="0" w="204" collapsed="false">Breaks the list into x sub-lists</comment><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%n">2</input></inputs><script><block s="doWarp"><script><block s="doIf"><block s="reportEquals"><block var="num"/><l>0</l></block><script><block s="doReport"><block s="reportNewList"><list><block s="reportNewList"><list></list></block></list></block></block></script></block><block s="doDeclareVariables"><list><l>result</l><l>vv</l></list></block><block s="doSetVar"><l>result</l><custom-block s="%n copies of %s"><block var="num"/><block s="reportNewList"><list></list></block></custom-block></block><block s="doSetVar"><l>vv</l><l>0</l></block><block s="doIf"><block s="reportListIsEmpty"><block var="list"/></block><script><block s="doReport"><block var="result"/></block></script></block><custom-block s="for each %upvar in %n %cs"><l>v</l><block var="num"/><script><block s="doRepeat"><block s="reportQuotient"><block s="reportListLength"><block var="list"/></block><block var="num"/></block><script><block s="doChangeVar"><l>vv</l><l>1</l></block><block s="doAddToList"><block s="reportListItem"><block var="vv"/><block var="list"/></block><block s="reportListItem"><block var="v"/><block var="result"/></block></block></script></block></script></custom-block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="pointing towards x: %&apos;x&apos; y: %&apos;y&apos; ?" type="predicate" category="motion"><header></header><code></code><translations></translations><inputs><input type="%n">0</input><input type="%n">0</input></inputs><script><block s="doReport"><custom-block s="pointing in direction %n ?"><custom-block s="%s to x: %n y: %n"><l>direction</l><block var="x"/><block var="y"/></custom-block></custom-block></block></script></block-definition><block-definition s="name of sound %&apos;num&apos;" type="reporter" category="sound"><header></header><code></code><translations></translations><inputs><input type="%n">1</input></inputs><script><block s="doReport"><block s="reportListItem"><block var="num"/><block s="reportGet"><l><option>sounds</option></l></block></block></block></script></block-definition><block-definition s="is string %&apos;string&apos; %&apos;key&apos; ?" type="predicate" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">pink girl</input><input type="%s" readonly="true">uppercased<options>uppercased&#xD;lowercased&#xD;capitalized&#xD;lined capitalized&#xD;full capitalized</options></input></inputs><script><block s="doReport"><custom-block s="cs %s = %s"><block var="string"/><custom-block s="%s string %s"><custom-block s="all but %n letter of %s"><l>last</l><block var="key"/></custom-block><block var="string"/></custom-block></custom-block></block></script></block-definition><block-definition s="sitename %&apos;sitename&apos; as mpirthi wiki name %&apos;wiki&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">candy-crush-saga</input><input type="%b">true</input></inputs><script><block s="doIf"><custom-block s="empty? %s"><block var="sitename"/></custom-block><script><block s="doReport"><custom-block s="sitename %s as mpirthi wiki name %b"><l>untitled</l><block var="wiki"/></custom-block></block></script></block><block s="doWarp"><script><block s="doDeclareVariables"><list><l>result</l><l>tick</l></list></block><block s="doSetVar"><l>result</l><custom-block s="%s string %s"><l>uppercase</l><block s="reportLetter"><l>1</l><block var="sitename"/></block></custom-block></block><block s="doSetVar"><l>tick</l><block s="reportBoolean"><l><bool>true</bool></l></block></block><custom-block s="for each %upvar of %s %ca"><l>letter</l><custom-block s="%s string %s"><l>lowercase</l><custom-block s="all but %n letter of %s"><l>1</l><block var="sitename"/></custom-block></custom-block><script><block s="doIfElse"><block s="reportEquals"><l></l><l>-</l></block><script><block s="doSetVar"><l>result</l><block s="reportJoinWords"><list><block var="result"/><l> </l></list></block></block><block s="doSetVar"><l>tick</l><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><script><block s="doIfElse"><block s="reportEquals"><l></l><l>.</l></block><script><block s="doSetVar"><l>result</l><block s="reportJoinWords"><list><block var="result"/></list></block></block><block s="doSetVar"><l>tick</l><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><script><block s="doIfElse"><block var="tick"/><script><block s="doSetVar"><l>result</l><block s="reportJoinWords"><list><block var="result"/><l></l></list></block></block></script><script><block s="doSetVar"><l>result</l><block s="reportJoinWords"><list><block var="result"/><custom-block s="%s string %s"><l>uppercase</l><l></l></custom-block></list></block></block><block s="doSetVar"><l>tick</l><block s="reportBoolean"><l><bool>true</bool></l></block></block></script></block></script></block></script></block></script></custom-block><block s="doIf"><block var="wiki"/><script><block s="doSetVar"><l>result</l><block s="reportJoinWords"><list><block var="result"/><l> Wiki</l></list></block></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="making up all combinations of %&apos;lists&apos; combining them with %&apos;combination&apos; using %&apos;sofar&apos; and for each combo do %&apos;script&apos;" type="command" category="lists"><header></header><code></code><translations></translations><inputs><input type="%mult%l"></input><input type="%repRing"></input><input type="%s"></input><input type="%ca"></input></inputs><script><block s="doRun"><block s="reportIfElse"><block s="reportListIsEmpty"><block var="lists"/></block><block s="reifyScript"><script><block s="doWarp"><script><block s="doRun"><block var="script"/><list><block var="sofar"/></list></block></script></block></script><list></list></block><block s="reifyScript"><script><block s="doWarp"><script><block s="doForEach"><l>item</l><block s="reportListItem"><l>1</l><block var="lists"/></block><script><custom-block s="making up all combinations of %mult%l combining them with %repRing using %s and for each combo do %ca"><block s="reportCDR"><block var="lists"/></block><block var="combination"/><block s="evaluate"><block var="combination"/><list><block var="sofar"/><block var="item"/></list></block><block var="script"/></custom-block></script></block></script></block></script><list></list></block></block><list></list></block></script></block-definition><block-definition s="decode %&apos;list&apos; to realworld format" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doReport"><block s="reportJoinWords"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportUnicodeAsLetter"><l></l></block></autolambda><list></list></block><block var="list"/></block></block></block></script></block-definition><block-definition s="encode unicode %&apos;string&apos; to linter format" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">Hello World</input></inputs><script><block s="doReport"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportUnicode"><l></l></block></autolambda><list></list></block><block s="reportTextSplit"><block var="string"/><l><option>letter</option></l></block></block></block></script></block-definition><block-definition s="initials of %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">Code Your Own Blocks</input></inputs><script><block s="doIfElse"><custom-block s="empty? %s"><block var="text"/></custom-block><script><block s="doReport"><l></l></block></script><script><block s="doReport"><block s="reportIfElse"><custom-block s="is string %s %s ?"><block s="reportLetter"><l>1</l><block var="text"/></block><l>uppercased</l></custom-block><block s="reportJoinWords"><list><block s="reportLetter"><l>1</l><block var="text"/></block><custom-block s="initials of %s"><custom-block s="all but %n word of %s"><l>1</l><block var="text"/></custom-block></custom-block></list></block><custom-block s="initials of %s"><custom-block s="all but %n word of %s"><l>1</l><block var="text"/></custom-block></custom-block></block></block></script></block></script></block-definition><block-definition s="%&apos;lists&apos; as sentence" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%mult%l"></input></inputs><script><block s="doReport"><custom-block s="%l as text"><block s="reportMap"><block s="reifyReporter"><autolambda><custom-block s="%l as text"><l/></custom-block></autolambda><list></list></block><block var="lists"/></block></custom-block></block></script></block-definition><block-definition s="rota %&apos;something&apos; and run %&apos;action&apos; only if last answered %&apos;tests&apos;" type="command" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s">What&apos;s your name</input><input type="%cs"></input><input type="%mult%s"></input></inputs><script><block s="doIf"><block s="reportListContainsItem"><block var="tests"/><custom-block s="rota %s"><block var="something"/></custom-block><comment w="168" collapsed="false">Last Answered block can&apos;t be used here as we want to use the reported ask block,not the stack ones</comment></block><script><block s="doRun"><block var="action"/><list></list></block></script></block></script></block-definition><block-definition s="inform %&apos;content&apos; titled %&apos;text&apos;" type="command" category="sensing"><comment x="0" y="0" w="184" collapsed="false">Informs something but does not wait for the command to finish</comment><header></header><code></code><translations></translations><inputs><input type="%s">This is some content!</input><input type="%s">!</input></inputs><script><block s="doDeclareVariables"><list><l>test</l></list></block><block s="doSetVar"><l>test</l><block s="evaluate"><block s="reportJSFunction"><list><l>title</l><l>content</l></list><l>var dialog = new DialogBoxMorph(),&#xD;        isDone = false;&#xD;dialog.onend = function () {isDone = true; };&#xD;dialog.inform(&#xD;      title,&#xD;      content,&#xD;      world&#xD;), isDone = true;&#xD;&#xD;return function () {return isDone; }</l></block><list><block var="text"/><block var="content"/></list></block></block><block s="doWaitUntil"><block s="evaluate"><block var="test"/><list></list></block></block></script></block-definition><block-definition s="touching clone of %&apos;sprite&apos; ?" type="predicate" category="sensing"><comment x="0" y="0" w="260" collapsed="false">Reports true if sprite is touching clones of another sprite</comment><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true"><options>§_objectsMenu</options></input></inputs><script><block s="doWarp"><script><block s="doIf"><block s="reportListIsEmpty"><block s="reportAskFor"><block var="sprite"/><block s="reifyReporter"><autolambda><block s="reportConcatenatedLists"><list><block s="reportGet"><l><option>clones</option></l></block><block s="reportGet"><l><option>children</option></l></block></list></block></autolambda><list></list></block><list></list></block></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block><block s="doReport"><custom-block s="%upvar repeated function %n times at %s via %repRing"><l>v</l><block s="reportListLength"><block s="reportAskFor"><block var="sprite"/><block s="reifyReporter"><autolambda><block s="reportConcatenatedLists"><list><block s="reportGet"><l><option>clones</option></l></block><block s="reportGet"><l><option>children</option></l></block></list></block></autolambda><list></list></block><list></list></block></block><block s="reportBoolean"><l><bool>false</bool></l></block><block s="reifyReporter"><autolambda><block s="reportOr"><l/><block s="reportTouchingObject"><block s="reportListItem"><block var="v"/><block s="reportAskFor"><block var="sprite"/><block s="reifyReporter"><autolambda><block s="reportConcatenatedLists"><list><block s="reportGet"><l><option>clones</option></l></block><block s="reportGet"><l><option>children</option></l></block></list></block></autolambda><list></list></block><list></list></block></block></block></block></autolambda><list></list></block></custom-block></block></script></block></script></block-definition><block-definition s="alert %&apos;something&apos;" type="command" category="sensing"><comment x="0" y="0" w="402.87890625" collapsed="false">Minimal inform block with the use of browser&apos;s own dialog box. Does wait for the script to be finished, unlike the GUI inform block</comment><header></header><code></code><translations></translations><inputs><input type="%s">Hello!</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>some</l></list><l>alert(some)</l></block><list><block var="something"/></list></block></script></block-definition><block-definition s="%&apos;string&apos; confirmed?" type="predicate" category="sensing"><comment x="0" y="0" w="294" collapsed="false">Displays a browser prompt with the text you wanted to show. Returns true if the user clicks the OK button in the modal</comment><header></header><code></code><translations></translations><inputs><input type="%s">Are you sure?</input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>some</l></list><l>return confirm(some)</l></block><list><block var="string"/></list></block></block></script></block-definition><block-definition s="rota %&apos;text&apos; in a browser modal with %&apos;int&apos; as initial answer" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%s">What&apos;s your name?</input><input type="%s">John Doe</input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>some</l><l>int</l></list><l>return prompt(some, int)</l></block><list><block var="text"/><block var="int"/></list></block></block></script></block-definition><block-definition s="mappulate string %&apos;string&apos; using %&apos;functs&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">Hello World</input><input type="%mult%repRing"></input></inputs><script><block s="doReport"><block s="reportIfElse"><block s="reportListIsEmpty"><block var="functs"/></block><block var="string"/><custom-block s="%upvar repeated function %n times at %s via %repRing"><l>v</l><block s="reportListLength"><block var="functs"/></block><block var="string"/><block s="reifyReporter"><autolambda><custom-block s="map %repRing over string %s"><block s="reportListItem"><block var="v"/><block var="functs"/></block><l></l></custom-block></autolambda><list></list></block></custom-block></block></block></script></block-definition><block-definition s="mappulate multiline %&apos;string&apos; using %&apos;functs&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%mlt">Hello&#xD;How are you?&#xD;Are you okay?</input><input type="%mult%repRing"></input></inputs><script><block s="doReport"><block s="reportIfElse"><block s="reportListIsEmpty"><block var="functs"/></block><block var="string"/><custom-block s="%upvar repeated function %n times at %s via %repRing"><l>v</l><block s="reportListLength"><block var="functs"/></block><block var="string"/><block s="reifyReporter"><autolambda><custom-block s="map %repRing over multiline %mlt"><block s="reportListItem"><block var="v"/><block var="functs"/></block><l></l></custom-block></autolambda><list></list></block></custom-block></block></block></script></block-definition><block-definition s="run %&apos;inline&apos; only if pen is down" type="command" category="pen"><header></header><code></code><translations></translations><inputs><input type="%cmdRing"></input></inputs><script><block s="doIf"><block s="getPenDown"></block><script><block s="doRun"><block var="inline"/><list></list></block></script></block></script></block-definition><block-definition s="mappulate list %&apos;list&apos; using %&apos;functs&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%l">Hello World</input><input type="%mult%repRing"></input></inputs><script><block s="doReport"><block s="reportIfElse"><block s="reportListIsEmpty"><block var="functs"/></block><block var="list"/><custom-block s="%upvar repeated function %n times at %s via %repRing"><l>v</l><block s="reportListLength"><block var="functs"/></block><block var="list"/><block s="reifyReporter"><autolambda><block s="reportMap"><block s="reportListItem"><block var="v"/><block var="functs"/></block><l/></block></autolambda><list></list></block></custom-block></block></block></script></block-definition><block-definition s="combomap %&apos;func&apos; over %&apos;lists&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%repRing"></input><input type="%mult%l"></input></inputs><script><block s="doReport"><block s="reportMap"><block var="func"/><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportCombine"><l/><block var="func"/></block></autolambda><list></list></block><block var="lists"/></block></block></block></script></block-definition><block-definition s="point to direction %&apos;direction&apos; in %&apos;num&apos; secs" type="command" category="motion"><comment x="0" y="0" w="178" collapsed="false">Like the built in point to direction block but gliding version</comment><header></header><code></code><translations></translations><inputs><input type="%n">90<options>§_directionDialMenu&#xD;(90) right = 90&#xD;(-90) left = -90&#xD;(0) up = 0&#xD;(180) down = 180</options></input><input type="%n">1</input></inputs><script><custom-block s="unless %b %cs"><custom-block s="pointing in direction %n ?"><block var="direction"/></custom-block><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doSetVar"><l>a</l><block s="reportQuotient"><block s="reportDifference"><block var="direction"/><block s="direction"></block></block><block s="reportProduct"><block var="num"/><l>60</l></block></block></block><block s="doRepeat"><block s="reportProduct"><block var="num"/><l>60</l></block><script><block s="turn"><block var="a"/></block></script></block></script></custom-block><block s="setHeading"><block var="direction"/></block></script></block-definition><block-definition s="point away from edge" type="command" category="motion"><header></header><code></code><translations></translations><inputs></inputs><script><custom-block s="point towards x: %n y: %n"><l>0</l><l>0</l></custom-block></script></block-definition><block-definition s="catch %&apos;tag&apos; %&apos;action&apos;" type="command" category="control"><header></header><code></code><translations>de:fange _ _&#xD;ca:agafa _ _&#xD;es:atrapar _ _&#xD;fr:attrape _ _&#xD;pt:captura _ _&#xD;</translations><inputs><input type="%upvar"></input><input type="%cs"></input></inputs><script><block s="doCallCC"><block s="reifyScript"><script><block s="doSetVar"><l>tag</l><block var="cont"/></block><block s="doRun"><block var="action"/><list></list></block></script><list><l>cont</l></list></block></block></script></block-definition><block-definition s="throw %&apos;cont&apos;" type="command" category="control"><header></header><code></code><translations>de:wirf _&#xD;ca:llança _&#xD;es:lanzar _&#xD;fr:lance _&#xD;pt:lança _&#xD;</translations><inputs><input type="%s">catchtag</input></inputs><script><block s="doRun"><block var="cont"/><list></list></block></script></block-definition><block-definition s="catch %&apos;tag&apos; %&apos;value&apos;" type="reporter" category="control"><header></header><code></code><translations>de:fange _ _&#xD;ca:agafa _ _&#xD;es:atrapar _ _&#xD;fr:attrape _ _&#xD;pt:captura _ _&#xD;</translations><inputs><input type="%upvar"></input><input type="%anyUE"></input></inputs><script><block s="doCallCC"><block s="reifyScript"><script><block s="doSetVar"><l>tag</l><block var="cont"/></block><block s="doReport"><block s="evaluate"><block var="value"/><list></list></block></block></script><list><l>cont</l></list></block></block></script></block-definition><block-definition s="throw %&apos;tag&apos; %&apos;value&apos;" type="command" category="control"><header></header><code></code><translations>de:wirf _ _&#xD;ca:llança _ _&#xD;es:lanzar _ _&#xD;fr:lance _ _&#xD;pt:lança _ _&#xD;</translations><inputs><input type="%s">catchtag</input><input type="%s"></input></inputs><script><block s="doRun"><block var="tag"/><list><block var="value"/></list></block></script></block-definition><block-definition s="number of costumes" type="reporter" category="looks"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportListLength"><block s="reportGet"><l><option>costumes</option></l></block></block></block></script></block-definition><block-definition s="revesal of letter case state from %&apos;text&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">EsSeNtIaLs</input></inputs><script><block s="doReport"><custom-block s="%upvar repeated function %n times at %s via %repRing"><l>v</l><block s="reportStringSize"><block var="text"/></block><l></l><block s="reifyReporter"><autolambda><block s="reportJoinWords"><list><l></l><block s="reportIfElse"><custom-block s="is string %s %s ?"><block s="reportLetter"><block var="v"/><block var="text"/></block><l>uppercased</l></custom-block><custom-block s="%s string %s"><l>lowercase</l><block s="reportLetter"><block var="v"/><block var="text"/></block></custom-block><custom-block s="%s string %s"><l>uppercase</l><block s="reportLetter"><block var="v"/><block var="text"/></block></custom-block></block></list></block></autolambda><list></list></block></custom-block></block></script></block-definition><block-definition s="zip %&apos;lists&apos;" type="reporter" category="lists"><comment x="0" y="0" w="193" collapsed="false">ZIP takes any number of lists as inputs.  The lists should all be the same length.  ZIP reports a list of lists in which the first item is a list of all the first items, the second item is a list of all the second items, etc.&#xD;Viewing the inputs as the rows of a matrix, ZIP reports its transpose.</comment><header></header><code></code><translations></translations><inputs><input type="%mult%l"></input></inputs><script><block s="doReport"><block s="reportIfElse"><block s="reportListIsEmpty"><block s="reportListItem"><l>1</l><block var="lists"/></block></block><block s="reportNewList"><list></list></block><block s="reportCONS"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><l>1</l><l/></block></autolambda><list></list></block><block var="lists"/></block><custom-block s="zip %mult%l"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportCDR"><l/></block></autolambda><list></list></block><block var="lists"/></block></custom-block></block></block></block></script></block-definition><block-definition s="multimap %&apos;repo&apos; over %&apos;lists&apos;" type="reporter" category="lists"><comment x="0" y="0" w="275" collapsed="false">Takes as input a function of N inputs and N lists.&#xD;The function is called with item 1 of all the lists as its inputs, with item 2 of all the lists as its inputs, and so on.  (The lists should all be the same length.)</comment><header></header><code></code><translations></translations><inputs><input type="%repRing"></input><input type="%mult%l"></input></inputs><script><block s="doReport"><block s="reportMap"><block s="reifyReporter"><autolambda><block s="evaluate"><block var="repo"/><custom-block s="%s"><l></l></custom-block></block></autolambda><list></list></block><custom-block s="zip %mult%l"><block var="lists"/></custom-block></block></block></script></block-definition><block-definition s="for each item of %&apos;lists&apos; %&apos;action&apos;" type="command" category="lists"><header></header><code></code><translations></translations><inputs><input type="%mult%l"></input><input type="%ca"></input></inputs><script><custom-block s="for each %upvar in %n %cs"><l>v</l><block s="reportListLength"><block s="reportListItem"><l>1</l><block var="lists"/></block></block><script><block s="doRun"><block var="action"/><block s="reportAtomicMap"><block s="reifyReporter"><autolambda><block s="reportListItem"><block var="v"/><l/></block></autolambda><list></list></block><block var="lists"/></block></block></script></custom-block></script></block-definition><block-definition s="equality of %&apos;lists&apos; ?" type="predicate" category="lists"><comment x="0" y="0" w="199" collapsed="false">Returns true ONLY IF all lists have the same length.</comment><header></header><code></code><translations></translations><inputs><input type="%mult%l"></input></inputs><script><block s="doReport"><custom-block s="%upvar repeated function %n times at %s via %repRing"><l>v</l><block s="reportListLength"><block var="lists"/></block><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reifyReporter"><autolambda><block s="reportAnd"><l/><block s="reportEquals"><block s="reportListLength"><block s="reportListItem"><l>1</l><block var="lists"/></block></block><block s="reportListLength"><block s="reportListItem"><block var="v"/><block var="lists"/></block></block></block></block></autolambda><list></list></block></custom-block></block></script></block-definition><block-definition s="shoot note %&apos;note&apos; at %&apos;viol&apos; violance" type="command" category="sound"><comment x="0" y="0" w="201" collapsed="false">Plays two very short notes</comment><header></header><code></code><translations></translations><inputs><input type="%n">60</input><input type="%n">5</input></inputs><script><custom-block s="for each %upvar in %n %cs"><l>v</l><l>2</l><script><block s="doPlayNote"><block s="reportDifference"><block var="note"/><block s="reportRandom"><l>-4</l><block s="reportSum"><block var="viol"/><block var="v"/></block></block></block><l>0.01</l></block></script></custom-block></script></block-definition><block-definition s="ruvok note %&apos;note&apos; for %&apos;nnx&apos; nonts" type="command" category="sound"><comment x="0" y="0" w="194" collapsed="false">Makes up a note of notes for xx nonts</comment><header></header><code></code><translations></translations><inputs><input type="%n">60</input><input type="%n">0.01</input></inputs><script><block s="doDeclareVariables"><list><l>value</l><l>completed</l></list></block><custom-block s="for each %upvar in %n %cs"><l>violance</l><l>3</l><script><block s="doSetVar"><l>value</l><block var="violance"/></block><block s="fork"><block s="reifyScript"><script><block s="doSetVar"><l>completed</l><block s="reportBoolean"><l><bool>false</bool></l></block></block><custom-block s="repeat %n secs %ca"><block s="reportProduct"><block s="reportProduct"><block s="reportQuotient"><block s="getTempo"></block><l>480</l></block><block var="nnx"/></block><l>1000</l></block><script><block s="doChangeVar"><l>value</l><block var="nnx"/></block><custom-block s="long shoot note %n at %n violance"><block s="reportSum"><block var="note"/><block s="reportProduct"><block var="value"/><l>0.66</l></block></block><block s="reportSum"><block s="reportSum"><l>5</l><block s="reportProduct"><block var="value"/><block s="reportProduct"><custom-block s="%n %s of %n"><l>70</l><l>percentage</l><block var="violance"/></custom-block><l>0.44</l></block></block></block><block var="violance"/></block></custom-block></script></custom-block><block s="doSetVar"><l>completed</l><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><list></list></block><list></list></block><block s="doRest"><l>0.01</l></block></script></custom-block><block s="doWaitUntil"><block var="completed"/></block></script></block-definition><block-definition s="%&apos;number&apos; %&apos;per&apos; of %&apos;num2&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">50</input><input type="%s" readonly="true">percentage<options>percentage&#xD;out</options></input><input type="%n">120</input></inputs><script><block s="doReport"><block s="reportListItem"><block s="reportListIndex"><block var="per"/><block s="reportNewList"><list><l>percentage</l><l>out</l></list></block></block><block s="reportNewList"><list><block s="reportRound"><block s="reportQuotient"><block s="reportProduct"><block var="num2"/><block var="number"/></block><l>100</l></block></block><block s="reportRound"><block s="reportQuotient"><block s="reportProduct"><block var="number"/><l>100</l></block><block var="num2"/></block></block></list></block></block></block></script></block-definition><block-definition s="construct fatal notes of %&apos;notes&apos; and then run %&apos;script&apos;" type="command" category="sound"><comment x="0" y="0" w="260" collapsed="false">Plays the set of notes while more than 2 items in the note list are provided and runs a script after the big note has ended. Does not work if the amount of notes isn&apos;t divisible by 2</comment><header></header><code></code><translations></translations><inputs><input type="%mult%n"></input><input type="%cs"></input></inputs><script><block s="doIfElse"><block s="reportOr"><block s="reportListIsEmpty"><block var="notes"/></block><block s="reportNot"><custom-block s="is %n divisble by %n ?"><block s="reportListLength"><block var="notes"/></block><l>2</l></custom-block></block></block><script><block s="doStopThis"><l><option>this block</option></l></block></script><script><block s="doIf"><block s="reportListIsEmpty"><block s="reportCDR"><block s="reportCDR"><block var="notes"/></block></block></block><script><block s="doRun"><block var="script"/><list><block s="reportListItem"><l>1</l><block var="notes"/></block><block s="reportListItem"><l>1</l><block s="reportCDR"><block var="notes"/></block></block></list></block><block s="doStopThis"><l><option>this block</option></l></block></script></block></script></block><block s="doDeclareVariables"><list><l>larger</l><l>smaller</l><l>completed</l></list></block><block s="doSetVar"><l>larger</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportGreaterThan"><l></l><l>7</l></block></autolambda><list></list></block><block var="notes"/></block></block><block s="doSetVar"><l>smaller</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportLessThan"><l></l><l>7</l></block></autolambda><list></list></block><block var="notes"/></block></block><block s="doSetVar"><l>completed</l><block s="reportBoolean"><l><bool>false</bool></l></block></block><custom-block s="for each item of %mult%l %ca"><list><block var="larger"/><block var="smaller"/></list><script><block s="fork"><block s="reifyScript"><script><block s="doSetVar"><l>completed</l><block s="reportBoolean"><l><bool>false</bool></l></block></block><custom-block s="ruvok note %n for %n nonts"><block var="#1"/><block s="reportQuotient"><block var="#2"/><l>100</l></block></custom-block><block s="doSetVar"><l>completed</l><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><list><l>#1</l><l>#2</l></list></block><list><l></l><l></l></list></block></script></custom-block><block s="doWaitUntil"><block var="completed"/></block><custom-block s="construct fatal notes of %mult%n and then run %cs"><block s="reportCDR"><block s="reportCDR"><block var="notes"/></block></block><block var="script"/></custom-block></script></block-definition><block-definition s="construct demical note of %&apos;notes&apos; and then run %&apos;script&apos;" type="command" category="sound"><comment x="0" y="0" w="260" collapsed="false">Plays the set of notes while more than 2 items in the note list are provided and runs a script after the big note has ended. Unlike the fatal version, it has different thersholds for note determinations if it is larger or smaller and does work if the note amount isn&apos;t divisible by 2, albeilt differently</comment><header></header><code></code><translations></translations><inputs><input type="%mult%n"></input><input type="%cs"></input></inputs><script><block s="doIfElse"><block s="reportListIsEmpty"><block var="notes"/></block><script><block s="doStopThis"><l><option>this block</option></l></block></script><script><block s="doIfElse"><block s="reportAnd"><block s="reportNot"><custom-block s="is %n divisble by %n ?"><block s="reportListLength"><block var="notes"/></block><l>2</l></custom-block></block><block s="reportNot"><block s="reportListIsEmpty"><block s="reportCDR"><block var="notes"/></block></block></block></block><script><custom-block s="construct demical note of %mult%n and then run %cs"><block s="reportCDR"><block s="reportCDR"><block var="notes"/></block></block><block var="script"/></custom-block><block s="doStopThis"><l><option>this block</option></l></block></script><script><block s="doIfElse"><block s="reportListIsEmpty"><block s="reportCDR"><block var="notes"/></block></block><script><block s="doRun"><block var="script"/><list><block s="reportListItem"><l>1</l><block var="notes"/></block><custom-block s="%n %s of %n"><l>15</l><l>percentage</l><block s="reportListItem"><l>1</l><block var="notes"/></block></custom-block></list></block><block s="doStopThis"><l><option>this block</option></l></block></script><script><block s="doIf"><block s="reportListIsEmpty"><block s="reportCDR"><block s="reportCDR"><block var="notes"/></block></block></block><script><block s="doRun"><block var="script"/><list><block s="reportListItem"><l>1</l><block var="notes"/></block><block s="reportListItem"><l>1</l><block s="reportCDR"><block var="notes"/></block></block></list></block><block s="doStopThis"><l><option>this block</option></l></block></script></block></script></block></script></block></script></block><block s="doDeclareVariables"><list><l>larger</l><l>smaller</l><l>completed</l></list></block><block s="doSetVar"><l>larger</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportGreaterThan"><l></l><l>10</l></block></autolambda><list></list></block><block var="notes"/></block></block><block s="doSetVar"><l>smaller</l><block s="reportKeep"><block s="reifyPredicate"><autolambda><block s="reportLessThan"><l></l><l>10</l></block></autolambda><list></list></block><block var="notes"/></block></block><block s="doSetVar"><l>completed</l><block s="reportBoolean"><l><bool>false</bool></l></block></block><custom-block s="for each item of %mult%l %ca"><list><block var="larger"/><block var="smaller"/></list><script><block s="fork"><block s="reifyScript"><script><block s="doSetVar"><l>completed</l><block s="reportBoolean"><l><bool>false</bool></l></block></block><custom-block s="ruvok note %n for %n nonts"><block var="#1"/><block s="reportQuotient"><block var="#2"/><l>100</l></block></custom-block><block s="doSetVar"><l>completed</l><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><list><l>#1</l><l>#2</l></list></block><list><l></l><l></l></list></block></script></custom-block><block s="doWaitUntil"><block var="completed"/></block><custom-block s="construct demical note of %mult%n and then run %cs"><block s="reportCDR"><block s="reportCDR"><block var="notes"/></block></block><block var="script"/></custom-block></script></block-definition><block-definition s="long shoot note %&apos;note&apos; at %&apos;viol&apos; violance" type="command" category="sound"><comment x="0" y="0" w="201" collapsed="false">Plays two very short notes</comment><header></header><code></code><translations></translations><inputs><input type="%n">60</input><input type="%n">5</input></inputs><script><custom-block s="for each %upvar in %n %cs"><l>v</l><l>2</l><script><block s="doPlayNote"><block s="reportDifference"><block var="note"/><block s="reportRandom"><l>-4</l><block s="reportSum"><block var="viol"/><block var="v"/></block></block></block><l>0.06</l></block></script></custom-block></script></block-definition><block-definition s="airplane note %&apos;note&apos; for %&apos;nnx&apos; nonts" type="command" category="sound"><comment x="0" y="0" w="194" collapsed="false">Makes up a note of notes for xx nonts</comment><header></header><code></code><translations></translations><inputs><input type="%n">60</input><input type="%n">0.01</input></inputs><script><block s="doDeclareVariables"><list><l>value</l><l>completed</l></list></block><custom-block s="for each %upvar in %n %cs"><l>violance</l><l>3</l><script><block s="doSetVar"><l>value</l><block var="violance"/></block><block s="fork"><block s="reifyScript"><script><block s="doSetVar"><l>completed</l><block s="reportBoolean"><l><bool>false</bool></l></block></block><custom-block s="repeat %n secs %ca"><block s="reportProduct"><block s="reportProduct"><block s="reportQuotient"><block s="getTempo"></block><l>480</l></block><block var="nnx"/></block><l>1000</l></block><script><block s="doChangeVar"><l>value</l><block var="nnx"/></block><custom-block s="shoot note %n at %n violance"><block s="reportSum"><block var="note"/><block s="reportProduct"><block var="value"/><l>0.66</l></block></block><block s="reportSum"><block s="reportSum"><l>4</l><block s="reportProduct"><block var="value"/><block s="reportProduct"><custom-block s="%n %s of %n"><l>70</l><l>percentage</l><block var="violance"/></custom-block><l>0.44</l></block></block></block><block var="violance"/></block></custom-block></script></custom-block><block s="doSetVar"><l>completed</l><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><list></list></block><list></list></block><block s="doRest"><l>0.01</l></block></script></custom-block><block s="doWaitUntil"><block var="completed"/></block></script></block-definition><block-definition s="%&apos;word&apos; broken in %&apos;num&apos; items" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">multi-column</input><input type="%n">2</input></inputs><script><block s="doWarp"><script><block s="doIf"><block s="reportEquals"><block var="num"/><l>0</l></block><script><block s="doReport"><l></l></block></script></block><block s="doDeclareVariables"><list><l>result</l><l>vv</l><l>tric</l></list></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list></list></block></block><block s="doSetVar"><l>vv</l><l>0</l></block><block s="doIf"><custom-block s="empty? %s"><block var="word"/></custom-block><script><block s="doReport"><block var="result"/></block></script></block><block s="doRepeat"><block var="num"/><script><block s="doSetVar"><l>tric</l><l></l></block><block s="doRepeat"><block s="reportQuotient"><block s="reportStringSize"><block var="word"/></block><block var="num"/></block><script><block s="doChangeVar"><l>vv</l><l>1</l></block><block s="doSetVar"><l>tric</l><block s="reportJoinWords"><list><block var="tric"/><block s="reportLetter"><block var="vv"/><block var="word"/></block></list></block></block></script></block><block s="doAddToList"><block var="tric"/><block var="result"/></block></script></block><block s="doReport"><block var="result"/></block></script></block></script></block-definition><block-definition s="run %&apos;script&apos; while being draggable else %&apos;action&apos;" type="command" category="motion"><header></header><code></code><translations></translations><inputs><input type="%cs"></input><input type="%cs"></input></inputs><script><custom-block s="run %cmdRing while being draggable"><block s="reifyScript"><script><block s="doRun"><block var="script"/><list></list></block><block s="doStopThis"><l><option>this block</option></l></block></script><list></list></block></custom-block><block s="doRun"><block var="action"/><list></list></block></script></block-definition><block-definition s="set rotation style to %&apos;style&apos;" type="command" category="motion"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">left-right<options>all around&#xD;left-rigth&#xD;don&apos;t rotate</options></input></inputs><script><block s="doSetVar"><l><option>rotation style</option></l><block s="reportDifference"><block s="reportListIndex"><block var="style"/><block s="reportNewList"><list><l>don&apos;t rotate</l><l>all around</l><l>left-right</l></list></block></block><l>1</l></block></block></script></block-definition><block-definition s="glide %&apos;number&apos; steps in %&apos;num&apos; secs" type="command" category="motion"><header></header><code></code><translations></translations><inputs><input type="%n">10</input><input type="%n">1</input></inputs><script><block s="doGlide"><block var="num"/><block s="reportSum"><block s="xPosition"></block><block s="reportProduct"><block s="reportMonadic"><l><option>sin</option></l><block s="direction"></block></block><block var="number"/></block></block><block s="reportSum"><block s="yPosition"></block><block s="reportProduct"><block s="reportMonadic"><l><option>cos</option></l><block s="direction"></block></block><block var="number"/></block></block></block></script></block-definition><block-definition s="go to average x: %&apos;avx&apos; and average y: %&apos;avy&apos;" type="command" category="motion"><header></header><code></code><translations></translations><inputs><input type="%mult%n"></input><input type="%mult%n"></input></inputs><script><block s="gotoXY"><custom-block s="average %mult%n"><block var="avx"/></custom-block><custom-block s="average %mult%n"><block var="avy"/></custom-block></block></script></block-definition><block-definition s="random position" type="reporter" category="motion"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportNewList"><list><block s="reportRandom"><block s="reportDifference"><l></l><block s="reportQuotient"><block s="reportListItem"><l>1</l><custom-block s="stage size"></custom-block></block><l>2</l></block></block><block s="reportQuotient"><block s="reportListItem"><l>1</l><custom-block s="stage size"></custom-block></block><l>2</l></block></block><block s="reportRandom"><block s="reportDifference"><l></l><block s="reportQuotient"><block s="reportListItem"><l>2</l><custom-block s="stage size"></custom-block></block><l>2</l></block></block><block s="reportQuotient"><block s="reportListItem"><l>2</l><custom-block s="stage size"></custom-block></block><l>2</l></block></block></list></block></block></script></block-definition><block-definition s="stage size" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list></list><l>return new List([StageMorph.prototype.dimensions.x,&#xD;                                   StageMorph.prototype.dimensions.y])</l></block><list></list></block></block></script></block-definition><block-definition s="go to a random position" type="command" category="motion"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doGotoObject"><custom-block s="random position"></custom-block></block></script></block-definition><block-definition s="presentation?" type="predicate" category="control"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list></list><l>return this.parentThatIsA(StageMorph).parentThatIsA(IDE_Morph).isAppMode</l></block><list></list></block></block></script></block-definition><block-definition s="for %&apos;i&apos; = %&apos;n1&apos; to %&apos;n2&apos; with %&apos;n3&apos; steeping %&apos;action&apos;" type="command" category="control"><header></header><code></code><translations></translations><inputs><input type="%upvar"></input><input type="%n">1</input><input type="%n">10</input><input type="%n">0.5</input><input type="%ca"></input></inputs><script><block s="doWarp"><script><block s="doSetVar"><l>i</l><block var="n1"/></block><block s="doUntil"><block s="reportIfElse"><block s="reportGreaterThan"><block var="n3"/><l>0</l></block><block s="reportGreaterThan"><block var="i"/><block var="n2"/></block><block s="reportLessThan"><block var="i"/><block var="n2"/></block></block><script><block s="doRun"><block var="action"/><list></list></block><block s="doChangeVar"><l>i</l><block var="n3"/></block></script></block></script></block></script></block-definition><block-definition s="if %&apos;bool&apos; then %&apos;action&apos; else if %&apos;bools&apos; %&apos;actions&apos; else %&apos;action3&apos;" type="command" category="control"><header></header><code></code><translations></translations><inputs><input type="%b"></input><input type="%cs"></input><input type="%mult%b"></input><input type="%mult%cs"></input><input type="%cs"></input></inputs><script><block s="doDeclareVariables"><list><l>a</l></list></block><block s="doIfElse"><block var="bool"/><script><block s="doRun"><block var="action"/><list></list></block></script><script><custom-block s="for each item of %mult%l %ca"><list><block var="bools"/><block var="actions"/></list><block s="reifyScript"><script><block s="doSetVar"><l>a</l><block var="#1"/></block><block s="doIf"><block var="a"/><script><block s="doRun"><block var="#2"/><list></list></block><block s="doStopThis"><l><option>this block</option></l></block></script></block></script><list><l>#1</l><l>#2</l></list></block></custom-block><block s="doIf"><block s="reportNot"><block var="a"/></block><script><block s="doRun"><block var="action3"/><list></list></block></script></block></script></block></script></block-definition><block-definition s="launch %&apos;inline&apos; on %&apos;list&apos;" type="command" category="control"><header></header><code></code><translations></translations><inputs><input type="%cmdRing"></input><input type="%l"></input></inputs><script><block s="doForEach"><l>item</l><block var="list"/><script><block s="fork"><block s="reifyScript"><script><block s="doTellTo"><block var="item"/><block var="inline"/><list></list></block></script><list></list></block><list></list></block></script></block></script></block-definition><block-definition s="command my anchor to %&apos;action&apos;" type="command" category="control"><header></header><code></code><translations></translations><inputs><input type="%cs"></input></inputs><script><block s="doTellTo"><block s="reportIfElse"><block s="reportIsA"><block s="reportGet"><l><option>anchor</option></l></block><l><option>sprite</option></l></block><block s="reportGet"><l><option>anchor</option></l></block><block s="reportObject"><l><option>myself</option></l></block></block><block var="action"/><list></list></block></script></block-definition><block-definition s="command my parts to %&apos;action&apos;" type="command" category="control"><header></header><code></code><translations></translations><inputs><input type="%cs"></input></inputs><script><custom-block s="run %cmdRing on %l"><block var="action"/><block s="reportGet"><l><option>parts</option></l></block></custom-block></script></block-definition><block-definition s="tell %&apos;sprite&apos; to do in parallel %&apos;actions&apos; and wait" type="command" category="control"><comment x="0" y="0" w="238.6666666666667" collapsed="false">Accepts any number of scripts as inputs.  Launches a separate thread for each of them, so they are done in parallel, then waits for them all to complete.&#xD;&#xD;This doesn&apos;t change how the Snap! scheduler works; the threads are not truly asynchronous. And there is no increase in speed.  Rather, the point of this block is to allow starting synchronized but independent scripts.</comment><header></header><code></code><translations>pt:executa _ em paralelo e espera&#xD;</translations><inputs><input type="%s" readonly="true"><options>§_objectsMenu</options></input><input type="%mult%cs"></input></inputs><script><block s="doTellTo"><block var="sprite"/><block s="reifyScript"><script><custom-block s="do in parallel %mult%cs and wait"><block var="actions"/></custom-block></script><list></list></block><list></list></block></script></block-definition><block-definition s="tell %&apos;sprite&apos; to do in parallel %&apos;actions&apos;" type="command" category="control"><comment x="0" y="0" w="238.6666666666667" collapsed="false">Accepts any number of scripts as inputs.  Launches a separate thread for each of them, so they are done in parallel, then waits for them all to complete.&#xD;&#xD;This doesn&apos;t change how the Snap! scheduler works; the threads are not truly asynchronous. And there is no increase in speed.  Rather, the point of this block is to allow starting synchronized but independent scripts.</comment><header></header><code></code><translations>pt:executa _ em paralelo e espera&#xD;</translations><inputs><input type="%s" readonly="true"><options>§_objectsMenu</options></input><input type="%mult%cs"></input></inputs><script><block s="doTellTo"><block var="sprite"/><block s="reifyScript"><script><custom-block s="do in parallel %mult%cs"><block var="actions"/></custom-block></script><list></list></block><list></list></block></script></block-definition><block-definition s="resolution" type="reporter" category="looks"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportJoinWords"><list><block s="reportRound"><custom-block s="width"></custom-block></block><l>x</l><block s="reportRound"><custom-block s="height"></custom-block></block></list></block></block></script></block-definition><block-definition s="%&apos;sprite&apos; resolution" type="reporter" category="looks"><header></header><code></code><translations></translations><inputs><input type="%obj"></input></inputs><script><block s="doReport"><block s="reportAskFor"><block var="sprite"/><block s="reifyReporter"><autolambda><custom-block s="resolution"></custom-block></autolambda><list></list></block><list></list></block></block></script></block-definition><block-definition s="animate costumes %&apos;c1&apos; to %&apos;c2&apos; at %&apos;fps&apos; fps" type="command" category="looks"><header></header><code></code><translations></translations><inputs><input type="%n">1</input><input type="%n">2</input><input type="%n">20</input></inputs><script><block s="doFor"><l>i</l><block var="c1"/><block var="c2"/><script><block s="doSwitchToCostume"><block var="i"/></block><block s="doWait"><block s="reportQuotient"><l>1</l><block var="fps"/></block></block></script></block></script></block-definition><block-definition s="say %&apos;text&apos; lettered for %&apos;num&apos; secs" type="command" category="looks"><header></header><code></code><translations></translations><inputs><input type="%s">Hello!</input><input type="%n">2</input></inputs><script><custom-block s="for each %upvar of %s %ca"><l>letter</l><block var="text"/><script><block s="doSayFor"><l></l><block var="num"/></block></script></custom-block></script></block-definition><block-definition s="costumes" type="reporter" category="looks"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportGet"><l><option>costumes</option></l></block></block></script></block-definition><block-definition s="%&apos;x&apos; x %&apos;y&apos; scaled at %&apos;num&apos; percent" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%n">480</input><input type="%n">360</input><input type="%n">100</input></inputs><script><block s="doReport"><block s="reportJoinWords"><list><custom-block s="%s number of %n"><l>even</l><block s="reportRound"><block s="reportQuotient"><block var="x"/><block s="reportQuotient"><block var="num"/><l>100</l></block></block></block></custom-block><l>x</l><custom-block s="%s number of %n"><l>even</l><block s="reportRound"><block s="reportQuotient"><block var="y"/><block s="reportQuotient"><block var="num"/><l>100</l></block></block></block></custom-block></list></block></block></script></block-definition><block-definition s="%&apos;x&apos; x %&apos;y&apos; scaled at %&apos;num&apos; DPI" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%n">480</input><input type="%n">360</input><input type="%n">96</input></inputs><script><block s="doReport"><custom-block s="%n x %n scaled at %n percent"><block var="x"/><block var="y"/><custom-block s="size for %n DPI"><block var="num"/></custom-block></custom-block></block></script></block-definition><block-definition s="get x of %&apos;n1&apos; : %&apos;n2&apos; y: %&apos;y&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%n">4</input><input type="%n">3</input><input type="%n">360</input></inputs><script><block s="doReport"><custom-block s="%s number of %n"><l>even</l><block s="reportRound"><block s="reportProduct"><block s="reportQuotient"><block var="n1"/><block var="n2"/></block><block var="y"/></block></block></custom-block></block></script></block-definition><block-definition s="get dpi of x: %&apos;x&apos; y: %&apos;y&apos; &quot; %&apos;inch&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%n">480</input><input type="%n">360</input><input type="%n">4</input></inputs><script><block s="doReport"><block s="reportRound"><block s="reportQuotient"><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportSum"><custom-block s="%n %s"><block var="x"/><l>squared</l></custom-block><custom-block s="%n %s"><block var="y"/><l>squared</l></custom-block></block></block><block var="inch"/></block></block></block></script></block-definition><block-definition s="get dpi of %&apos;n1&apos; : %&apos;n2&apos; y: %&apos;y&apos; &quot; %&apos;inch&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%n">4</input><input type="%n">3</input><input type="%n">360</input><input type="%n">4</input></inputs><script><block s="doReport"><custom-block s="get dpi of x: %n y: %n &quot; %n"><custom-block s="get x of %n : %n y: %n"><block var="n1"/><block var="n2"/><block var="y"/></custom-block><block var="y"/><block var="inch"/></custom-block></block></script></block-definition><block-definition s="get &quot; of x: %&apos;x&apos; y: %&apos;y&apos; DPI %&apos;dpi&apos;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%n">480</input><input type="%n">360</input><input type="%n">150</input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>res</l><l>res2</l></list></block><block s="doSetVar"><l>res</l><custom-block s="get dpi of x: %n y: %n &quot; %n"><block var="x"/><block var="y"/><block var="dpi"/></custom-block></block><block s="doSetVar"><l>res2</l><block s="reportQuotient"><block s="reportMonadic"><l><option>sqrt</option></l><block s="reportSum"><custom-block s="%n %s"><block var="x"/><l>squared</l></custom-block><custom-block s="%n %s"><block var="y"/><l>squared</l></custom-block></block></block><block var="dpi"/></block></block><block s="doReport"><block s="reportIfElse"><block s="reportGreaterThan"><block s="reportStringSize"><block var="res"/></block><l>2</l></block><block var="res"/><custom-block s="letters %n to %n of %s"><l>1</l><block s="reportSum"><custom-block s="find %s in %s"><l>.</l><block var="res2"/></custom-block><custom-block s="position of %n within %n and %n"><block s="reportDifference"><l>3</l><block s="reportStringSize"><block var="res"/></block></block><l>0</l><l>2</l></custom-block></block><block var="res2"/></custom-block></block></block></script></block></script></block-definition><block-definition s="%&apos;x&apos; x %&apos;y&apos; scaled at %&apos;inches&apos; &quot;" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs><input type="%n">480</input><input type="%n">360</input><input type="%n">4</input></inputs><script><block s="doReport"><custom-block s="%n x %n scaled at %n DPI"><block var="x"/><block var="y"/><custom-block s="get dpi of x: %n y: %n &quot; %n"><block var="x"/><block var="y"/><block var="inches"/></custom-block></custom-block></block></script></block-definition><block-definition s="hz from note %&apos;note&apos;" type="reporter" category="sound"><header></header><code></code><translations></translations><inputs><input type="%n">69</input></inputs><script><block s="doReport"><block s="reportRound"><block s="reportProduct"><l>440</l><block s="reportMonadic"><l><option>2^</option></l><block s="reportQuotient"><block s="reportDifference"><block var="note"/><l>69</l></block><l>12</l></block></block></block></block></block></script></block-definition><block-definition s="name of note %&apos;note&apos;" type="reporter" category="sound"><header></header><code></code><translations></translations><inputs><input type="%n">69</input></inputs><script><block s="doReport"><block s="reportListItem"><block s="reportSum"><block s="reportModulus"><block s="reportDifference"><block var="note"/><l>69</l></block><l>12</l></block><l>1</l></block><block s="reportNewList"><list><l>A</l><l>Bb</l><l>B</l><l>C</l><l>C#</l><l>D</l><l>Eb</l><l>E</l><l>F</l><l>F#</l><l>G</l><l>G#</l></list></block></block></block></script></block-definition><block-definition s="play any siund" type="command" category="sound"><header></header><code></code><translations></translations><inputs></inputs><script><block s="playSound"><block s="reportListItem"><l><option>any</option></l><block s="reportGet"><l><option>sounds</option></l></block></block></block></script></block-definition><block-definition s="play any sound until done" type="command" category="sound"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doPlaySoundUntilDone"><block s="reportListItem"><l><option>any</option></l><block s="reportGet"><l><option>sounds</option></l></block></block></block></script></block-definition><block-definition s="sound %&apos;sound&apos; exists?" type="predicate" category="sound"><header></header><code></code><translations></translations><inputs><input type="%s">pop</input></inputs><script><block s="doReport"><block s="reportListContainsItem"><block s="reportGet"><l><option>sounds</option></l></block><block var="sound"/></block></block></script></block-definition><block-definition s="%&apos;s&apos; ≤ %&apos;s2&apos;" type="predicate" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%s"></input></inputs><script><block s="doReport"><block s="reportNot"><block s="reportGreaterThan"><block var="s"/><block var="s2"/></block></block></block></script></block-definition><block-definition s="%&apos;s1&apos; ≥ %&apos;s2&apos;" type="predicate" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%s"></input></inputs><script><block s="doReport"><block s="reportNot"><block s="reportLessThan"><block var="s1"/><block var="s2"/></block></block></block></script></block-definition><block-definition s="is %&apos;n1&apos; between %&apos;n2&apos; and %&apos;n3&apos; ?" type="predicate" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">6</input><input type="%n">4</input><input type="%n">10</input></inputs><script><block s="doReport"><block s="reportEquals"><custom-block s="position of %n within %n and %n"><block var="n1"/><block var="n2"/><block var="n3"/></custom-block><block var="n1"/></block></block></script></block-definition><block-definition s="map %&apos;t1&apos; $nl from: [ %&apos;t2&apos; , %&apos;t3&apos; ] $nl to : [ %&apos;t4&apos; , %&apos;t5&apos; ]" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">180</input><input type="%n">0</input><input type="%n">360</input><input type="%n">0</input><input type="%n">100</input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>t6</l><l>t7</l></list></block><block s="doSetVar"><l>t6</l><block s="reportDifference"><block var="t3"/><block var="t2"/></block></block><block s="doSetVar"><l>t7</l><block s="reportDifference"><block var="t5"/><block var="t4"/></block></block><block s="doIf"><block s="reportOr"><block s="reportOr"><block s="reportEquals"><block var="t6"/><l>0</l></block><block s="reportEquals"><block var="t7"/><l>0</l></block></block><block s="reportLessThan"><block var="t1"/><block var="t2"/></block></block><script><block s="doReport"><block var="t4"/></block></script></block><block s="doIf"><block s="reportGreaterThan"><block var="t1"/><block var="t3"/></block><script><block s="doReport"><block var="t5"/></block></script></block><block s="doReport"><block s="reportSum"><block s="reportProduct"><block s="reportQuotient"><block s="reportDifference"><block var="t1"/><block var="t2"/></block><block var="t6"/></block><block var="t7"/></block><block var="t4"/></block></block></script></block></script></block-definition><block-definition s="degress %&apos;num&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">0.5</input></inputs><script><block s="doReport"><block s="reportQuotient"><block s="reportProduct"><block var="num"/><l>180</l></block><l>3.141592653589793</l></block></block></script></block-definition><block-definition s="3^ %&apos;num&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%n">10</input></inputs><script><block s="doReport"><block s="reportPower"><l>3</l><block var="num"/></block></block></script></block-definition><block-definition s="%&apos;bool&apos; and %&apos;bools&apos;" type="predicate" category="operators"><header></header><code></code><translations></translations><inputs><input type="%b"></input><input type="%mult%b"></input></inputs><script><block s="doReport"><block s="reportCombine"><block s="reportCONS"><block var="bool"/><block var="bools"/></block><block s="reifyReporter"><autolambda><block s="reportAnd"><l/><l/></block></autolambda><list></list></block></block></block></script></block-definition><block-definition s="%&apos;bool&apos; or %&apos;bools&apos;" type="predicate" category="operators"><header></header><code></code><translations></translations><inputs><input type="%b"></input><input type="%mult%b"></input></inputs><script><block s="doReport"><block s="reportCombine"><block s="reportCONS"><block var="bool"/><block var="bools"/></block><block s="reifyReporter"><autolambda><block s="reportOr"><l/><l/></block></autolambda><list></list></block></block></block></script></block-definition><block-definition s="square %&apos;num&apos;" type="command" category="pen"><header></header><code></code><translations></translations><inputs><input type="%n">3</input></inputs><script><custom-block s="run %cs with pen down"><script><block s="doWarp"><script><block s="doRepeat"><l>4</l><script><block s="forward"><block s="reportProduct"><block var="num"/><l>10</l></block></block><block s="turn"><l>90</l></block></script></block></script></block></script></custom-block></script></block-definition><block-definition s="star %&apos;num&apos;" type="command" category="pen"><header></header><code></code><translations></translations><inputs><input type="%n">3</input></inputs><script><custom-block s="run %cs with pen down"><script><block s="doWarp"><script><block s="doRepeat"><l>5</l><script><block s="forward"><block s="reportProduct"><block var="num"/><l>15</l></block></block><block s="turn"><l>144</l></block></script></block></script></block></script></custom-block></script></block-definition><block-definition s="triangle %&apos;num&apos;" type="command" category="pen"><header></header><code></code><translations></translations><inputs><input type="%n">3</input></inputs><script><custom-block s="run %cs with pen down"><script><block s="doWarp"><script><block s="doRepeat"><l>3</l><script><block s="forward"><block s="reportProduct"><block var="num"/><l>10</l></block></block><block s="turn"><l>120</l></block></script></block></script></block></script></custom-block></script></block-definition><block-definition s="distortion %&apos;list&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doIfElse"><block s="reportOr"><block s="reportListIsEmpty"><block var="list"/></block><block s="reportNot"><custom-block s="is %n divisble by %n ?"><block s="reportListLength"><block var="list"/></block><l>2</l></custom-block></block></block><script><block s="doReport"><block s="reportNewList"><list></list></block></block></script><script><block s="doIfElse"><block s="reportEquals"><block s="reportListItem"><l>1</l><block var="list"/></block><block s="reportListItem"><l>1</l><block s="reportCDR"><block var="list"/></block></block></block><script><block s="doReport"><block s="reportCONS"><block s="reportListItem"><l>1</l><block var="list"/></block><custom-block s="distortion %l"><block s="reportCDR"><block s="reportCDR"><block var="list"/></block></block></custom-block></block></block></script><script><block s="doReport"><block s="reportCONS"><block s="reportJoinWords"><list><block s="reportListItem"><l>1</l><block var="list"/></block><block s="reportListItem"><l>1</l><block s="reportCDR"><block var="list"/></block></block></list></block><custom-block s="distortion %l"><block s="reportCDR"><block s="reportCDR"><block var="list"/></block></block></custom-block></block></block></script></block></script></block></script></block-definition><block-definition s="distort string %&apos;string&apos;" type="reporter" category="operators"><header></header><code></code><translations></translations><inputs><input type="%s">Sea gate Barra cuda</input></inputs><script><block s="doReport"><custom-block s="%l as text"><custom-block s="distortion %l"><block s="reportTextSplit"><block var="string"/><l><option>word</option></l></block></custom-block></custom-block></block></script></block-definition><block-definition s="distort lists of %&apos;lists&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%mult%l"></input></inputs><script><block s="doReport"><block s="reportMap"><block s="reifyReporter"><autolambda><custom-block s="distortion %l"><l/></custom-block></autolambda><list></list></block><block var="lists"/></block></block></script></block-definition><block-definition s="command map %&apos;repo&apos; over %&apos;scripts&apos;" type="reporter" category="lists"><header></header><code></code><translations></translations><inputs><input type="%repRing"></input><input type="%mult%cmdRing"></input></inputs><script><block s="doReport"><block s="reportMap"><block var="repo"/><block s="reportMap"><block s="reifyReporter"><autolambda><block s="evaluate"><block var="value"/><list></list></block></autolambda><list><l>value</l></list></block><block var="scripts"/></block></block></block></script></block-definition><block-definition s="send %&apos;list1&apos; to lists %&apos;list2&apos;" type="command" category="lists"><comment x="0" y="0" w="174" collapsed="false">Sens every item from the 1st list in the other lists</comment><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%mult%l"></input></inputs><script><block s="doWarp"><script><block s="doForEach"><l>item</l><block var="list2"/><script><custom-block s="send %l to %l"><block var="list1"/><block var="item"/></custom-block></script></block></script></block></script></block-definition><block-definition s="set pen color to r: %&apos;r&apos; g: %&apos;g&apos; b: %&apos;b&apos; a: %&apos;alpjha&apos;" type="command" category="pen"><comment x="0" y="0" w="220.66666666666663" collapsed="false">Takes three inputs for red, green, and blue&#xD;values, each between 0 and 255.  0,0,0 is black; 255,255,255 is white.  255,255,0 is yellow, and so on.&#xD;&#xD;The SET PEN block in this library lets you set individual red, green, or blue without changing the others, lets you provide a list of three RGB color components, and lets you provide a six-digit hexadecimal number, the form in which RGB color values are usually found online.&#xD;&#xD;See Appendix A of the Snap! Reference Manual for details.</comment><header></header><code></code><translations>pt:altera a cor da tua caneta para vermelho _ , verde _ e azul _ (0 a 255)&#xD;</translations><inputs><input type="%n">255</input><input type="%n">0</input><input type="%n">0</input><input type="%n">1</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>r</l><l>g</l><l>b</l></list><l>this.setColor(new Color(r, g, b));</l></block><list><block var="r"/><block var="g"/><block var="b"/></list></block><block s="setPenHSVA"><l><option>transparency</option></l><block s="reportDifference"><l>100</l><block s="reportProduct"><block var="alpjha"/><l>100</l></block></block></block></script></block-definition><block-definition s="set pen color to h: %&apos;h&apos; s: %&apos;s&apos; v: %&apos;v&apos; a: %&apos;alpha&apos;" type="command" category="pen"><comment x="0" y="0" w="283.3333333333333" collapsed="false">Takes three inputs for hue, saturation, and value (&quot;brightness&quot;)&#xD;values, each between 0 and 1.  0,0,0 is black; 0,0,1 is white.  0.15,1,1 is yellow, and so on.&#xD;&#xD;The SET PEN block in this library lets you set individual hue, saturation, or value without changing the others, lets you provide a list of three HSV color components, and lets you&#xD;use the very much superior HSL (hue, saturation, lightness)&#xD;color space.&#xD;&#xD;See Appendix A of the Snap! Reference Manual for details.</comment><header></header><code></code><translations>pt:altera a cor da caneta para matiz _ , saturação _ e brilho _ (0 a 1)&#xD;</translations><inputs><input type="%n">0.3</input><input type="%n">0.7</input><input type="%n">0.6</input><input type="%n">1</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>h</l><l>s</l><l>v</l></list><l>var col = new Color();&#xD;col.set_hsv(h, s, v);&#xD;this.setColor(col);</l></block><list><block var="h"/><block var="s"/><block var="v"/></list></block><block s="setPenHSVA"><l><option>transparency</option></l><block s="reportDifference"><l>100</l><block s="reportProduct"><block var="alpha"/><l>100</l></block></block></block></script></block-definition><block-definition s="set pen color to hex: %&apos;hex&apos;" type="command" category="pen"><comment x="0" y="0" w="220.66666666666663" collapsed="false">Takes one input for red, green, and blue&#xD;values, each between 00 and FF for each channel.  #000 is black; #fff is white.  #ff0 is yellow, and so on.&#xD;&#xD;The SET PEN block in this library lets you set individual red, green, or blue without changing the others, lets you provide a list of three RGB color components, and lets you provide a six-digit hexadecimal number, the form in which RGB color values are usually found online.&#xD;&#xD;See Appendix A of the Snap! Reference Manual for details.</comment><header></header><code></code><translations>pt:altera a cor da tua caneta para vermelho _ , verde _ e azul _ (0 a 255)&#xD;</translations><inputs><input type="%s">#000000</input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>temp</l></list></block><block s="doSetVar"><l>temp</l><custom-block s="%s as proper hexademical"><block var="hex"/></custom-block></block><custom-block s="set pen color to r: %n g: %n b: %n a: %n"><custom-block s="%s as %s value"><custom-block s="letters %n to %n of %s"><l>1</l><l>2</l><block var="temp"/></custom-block><l>numerical</l></custom-block><custom-block s="%s as %s value"><custom-block s="letters %n to %n of %s"><l>3</l><l>4</l><block var="temp"/></custom-block><l>numerical</l></custom-block><custom-block s="%s as %s value"><custom-block s="letters %n to %n of %s"><l>5</l><l>6</l><block var="temp"/></custom-block><l>numerical</l></custom-block><block s="reportIfElse"><custom-block s="empty? %s"><custom-block s="letters %n to %n of %s"><l>7</l><l>8</l><block var="temp"/></custom-block></custom-block><l>1</l><block s="reportQuotient"><custom-block s="%s as %s value"><custom-block s="letters %n to %n of %s"><l>7</l><l>8</l><block var="temp"/></custom-block><l>numerical</l></custom-block><l>255</l></block></block></custom-block></script></block></script></block-definition><block-definition s="is %&apos;hex&apos; a hex color?" type="predicate" category="pen"><comment x="0" y="0" w="234.00000000000003" collapsed="false">Returns TRUE if the text is a valid hex value </comment><header></header><code></code><translations></translations><inputs><input type="%s">#fff</input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>temp</l></list></block><block s="doSetVar"><l>temp</l><custom-block s="%s as proper hexademical"><block var="hex"/></custom-block></block><block s="doIf"><block s="reportNot"><custom-block s="%s is one of %mult%s"><block s="reportStringSize"><custom-block s="all but %n letter of %s"><l>1</l><block var="hex"/></custom-block></block><list><l>3</l><l>4</l><l>6</l><l>9</l></list></custom-block></block><script><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block><block s="doReport"><custom-block s="%b and %mult%b"><block s="reportEquals"><custom-block s="%s as %s value"><custom-block s="%s as %s value"><custom-block s="letters %n to %n of %s"><l>1</l><l>2</l><block var="temp"/></custom-block><l>numerical</l></custom-block><l>hexademical</l></custom-block><custom-block s="letters %n to %n of %s"><l>1</l><l>2</l><block var="temp"/></custom-block></block><list><block s="reportEquals"><custom-block s="%s as %s value"><custom-block s="%s as %s value"><custom-block s="letters %n to %n of %s"><l>3</l><l>4</l><block var="temp"/></custom-block><l>numerical</l></custom-block><l>hexademical</l></custom-block><custom-block s="letters %n to %n of %s"><l>3</l><l>4</l><block var="temp"/></custom-block></block><block s="reportEquals"><custom-block s="%s as %s value"><custom-block s="%s as %s value"><custom-block s="letters %n to %n of %s"><l>5</l><l>6</l><block var="temp"/></custom-block><l>numerical</l></custom-block><l>hexademical</l></custom-block><custom-block s="letters %n to %n of %s"><l>5</l><l>6</l><block var="temp"/></custom-block></block><block s="reportIfElse"><custom-block s="empty? %s"><custom-block s="letters %n to %n of %s"><l>7</l><l>8</l><block var="temp"/></custom-block></custom-block><block s="reportBoolean"><l><bool>true</bool></l></block><block s="reportEquals"><custom-block s="%s as %s value"><custom-block s="%s as %s value"><custom-block s="letters %n to %n of %s"><l>5</l><l>6</l><block var="temp"/></custom-block><l>numerical</l></custom-block><l>hexademical</l></custom-block><custom-block s="letters %n to %n of %s"><l>5</l><l>6</l><block var="temp"/></custom-block></block></block></list></custom-block></block></script></block></script></block-definition><block-definition s="set pen color to rgb list: %&apos;list&apos;" type="command" category="pen"><header></header><code></code><translations></translations><inputs><input type="%l"></input></inputs><script><block s="doRun"><block s="reifyScript"><script><custom-block s="set pen color to r: %n g: %n b: %n a: %n"><l></l><l></l><l></l><block s="reportQuotient"><l></l><l>255</l></block></custom-block></script><list></list></block><custom-block s="items %n to %n of %l"><l>1</l><l>4</l><block var="list"/></custom-block></block></script></block-definition><block-definition s="color at pixel x: %&apos;x&apos; y: %&apos;y&apos;" type="reporter" category="pen"><header></header><code></code><translations></translations><inputs><input type="%n">0</input><input type="%n">0</input></inputs><script><block s="doReport"><block s="reportAspect"><l><option>r-g-b-a</option></l><block s="reportNewList"><list><block var="x"/><block var="y"/></list></block></block></block></script></block-definition><block-definition s="pen %&apos;color&apos;" type="reporter" category="pen"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">RGB<options>RGB&#xD;HSV&#xD;Red&#xD;Green&#xD;Blue&#xD;Hue&#xD;Saturation&#xD;Value</options></input></inputs><script><block s="doWarp"><script><block s="doIfElse"><block s="reportEquals"><l>Red</l><block var="color"/></block><script><block s="doReport"><block s="reportListItem"><l>1</l><custom-block s="pen %s"><l>RGB</l></custom-block></block></block></script><script><block s="doIfElse"><block s="reportEquals"><l>Green</l><block var="color"/></block><script><block s="doReport"><block s="reportListItem"><l>2</l><custom-block s="pen %s"><l>RGB</l></custom-block></block></block></script><script><block s="doIfElse"><block s="reportEquals"><l>Blue</l><block var="color"/></block><script><block s="doReport"><block s="reportListItem"><l>3</l><custom-block s="pen %s"><l>RGB</l></custom-block></block></block></script><script><block s="doIfElse"><block s="reportEquals"><l>Hue</l><block var="color"/></block><script><block s="doReport"><block s="reportListItem"><l>1</l><custom-block s="pen %s"><l>HSV</l></custom-block></block></block></script><script><block s="doIfElse"><block s="reportEquals"><l>Saturation</l><block var="color"/></block><script><block s="doReport"><block s="reportListItem"><l>2</l><custom-block s="pen %s"><l>HSV</l></custom-block></block></block></script><script><block s="doIfElse"><block s="reportEquals"><l>Value</l><block var="color"/></block><script><block s="doReport"><block s="reportListItem"><l>3</l><custom-block s="pen %s"><l>HSV</l></custom-block></block></block></script><script></script></block></script></block></script></block></script></block></script></block></script></block><block s="doReport"><block s="evaluate"><block s="reportListItem"><block s="reportListIndex"><block var="color"/><block s="reportNewList"><list><l>RGB</l><l>HSV</l></list></block></block><block s="reportNewList"><list><block s="reportJSFunction"><list><l></l></list><l>return new List([this.color.r, this.color.g, this.color.b]);</l></block><block s="reportJSFunction"><list><l></l></list><l>return new List(this.color.hsv());</l></block></list></block></block><list></list></block></block></script></block></script></block-definition><block-definition s="swap channels %&apos;c1&apos; and %&apos;c2&apos; from hex: %&apos;hex&apos; as %&apos;type&apos;" type="reporter" category="pen"><header></header><code></code><translations></translations><inputs><input type="%s" readonly="true">Red<options>Red&#xD;Green&#xD;Blue&#xD;Alpha</options></input><input type="%s" readonly="true">Green<options>Red&#xD;Green&#xD;Blue&#xD;Alpha</options></input><input type="%s">#00FF00</input><input type="%s" readonly="true">hex<options>hex&#xD;proper hex&#xD;RGB list</options></input></inputs><script><block s="doWarp"><script><block s="doIf"><block s="reportEquals"><l>proper hex</l><block var="type"/></block><script><block s="doReport"><custom-block s="%s as proper hexademical"><custom-block s="swap channels %s and %s from hex: %s as %s"><block var="c1"/><block var="c2"/><block var="hex"/><l>hex</l></custom-block></custom-block></block></script></block><block s="doDeclareVariables"><list><l>temp</l><l>b</l><l>c</l></list></block><block s="doSetVar"><l>temp</l><custom-block s="hex %s as list"><block var="hex"/></custom-block></block><block s="doSetVar"><l>b</l><block s="reportListIndex"><block var="c1"/><block s="reportNewList"><list><l>Red</l><l>Green</l><l>Blue</l><l>Alpha</l></list></block></block></block><block s="doSetVar"><l>c</l><block s="reportListIndex"><block var="c2"/><block s="reportNewList"><list><l>Red</l><l>Green</l><l>Blue</l><l>Alpha</l></list></block></block></block><block s="doReport"><block s="reportListItem"><block s="reportListIndex"><block var="type"/><block s="reportNewList"><list><l>hex</l><l>RGB List</l></list></block></block><block s="reportNewList"><list><custom-block s="RGB %l as %s"><custom-block s="items %n and %n from %l swapped"><block var="b"/><block var="c"/><block var="temp"/></custom-block><l>hex</l></custom-block><custom-block s="items %n and %n from %l swapped"><block var="b"/><block var="c"/><block var="temp"/></custom-block></list></block></block></block></script></block></script></block-definition><block-definition s="%&apos;hex&apos; as proper hexademical" type="reporter" category="pen"><comment x="0" y="0" w="174" collapsed="false">Returns the hex without any # and be 6 or 8 letters long</comment><header></header><code></code><translations></translations><inputs><input type="%s">#000</input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>temp</l></list></block><block s="doSetVar"><l>temp</l><block var="hex"/></block><block s="doIf"><custom-block s="%s %s %s"><block var="temp"/><l>starts with</l><l>#</l></custom-block><script><block s="doSetVar"><l>temp</l><custom-block s="all but %n letter of %s"><l>1</l><block var="temp"/></custom-block></block></script></block><block s="doIf"><custom-block s="%s is one of %mult%s"><block s="reportStringSize"><block var="temp"/></block><list><l>3</l><l>4</l></list></custom-block><script><block s="doSetVar"><l>temp</l><custom-block s="%l as spaceless text"><block s="reportMap"><block s="reifyReporter"><autolambda><custom-block s="%s %n times"><l></l><l>2</l></custom-block></autolambda><list></list></block><block s="reportTextSplit"><block var="temp"/><l><option>letter</option></l></block></block></custom-block></block></script></block></script></block><block s="doReport"><block var="temp"/></block></script></block-definition><block-definition s="hex %&apos;hex&apos; as list" type="reporter" category="pen"><header></header><code></code><translations></translations><inputs><input type="%s">#fff</input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>temp</l></list></block><block s="doSetVar"><l>temp</l><custom-block s="%s as proper hexademical"><block var="hex"/></custom-block></block><block s="doReport"><block s="reportMap"><block s="reifyReporter"><autolambda><custom-block s="%s as %s value"><l></l><l>numerical</l></custom-block></autolambda><list></list></block><custom-block s="%s broken in %n items"><block var="temp"/><block s="reportQuotient"><block s="reportStringSize"><block var="temp"/></block><l>2</l></block></custom-block></block></block></script></block></script></block-definition><block-definition s="RGB %&apos;list&apos; as %&apos;hex&apos;" type="reporter" category="pen"><header></header><code></code><translations></translations><inputs><input type="%l"></input><input type="%s" readonly="true">hex<options>hex&#xD;proper hex</options></input></inputs><script><block s="doIfElse"><block s="reportEquals"><l>proper hex</l><block var="hex"/></block><script><block s="doReport"><custom-block s="%s as proper hexademical"><custom-block s="RGB %l as %s"><block var="list"/><l>hex</l></custom-block></custom-block></block></script><script><block s="doReport"><block s="reportJoinWords"><list><l>#</l><custom-block s="%l as spaceless text"><block s="reportMap"><block s="reifyReporter"><autolambda><custom-block s="%s as %s value"><l></l><l>hexademical</l></custom-block></autolambda><list></list></block><block var="list"/></block></custom-block></list></block></block></script></block></script></block-definition><block-definition s="%&apos;hex&apos; as negative %&apos;type&apos;" type="reporter" category="pen"><header></header><code></code><translations></translations><inputs><input type="%s">#f0f</input><input type="%s" readonly="true">hex<options>hex&#xD;proper hex&#xD;RGB list</options></input></inputs><script><block s="doWarp"><script><block s="doIf"><block s="reportEquals"><block var="type"/><l>proper hex</l></block><script><block s="doReport"><custom-block s="%s as proper hexademical"><custom-block s="%s as negative %s"><block var="hex"/><l>hex</l></custom-block></custom-block></block></script></block><block s="doDeclareVariables"><list><l>temp</l></list></block><block s="doSetVar"><l>temp</l><custom-block s="hex %s as list"><block var="hex"/></custom-block></block><block s="doSetVar"><l>temp</l><block s="reportIfElse"><block s="reportEquals"><l>4</l><block s="reportListLength"><block var="temp"/></block></block><block s="reportConcatenatedLists"><list><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportDifference"><l>255</l><l></l></block></autolambda><list></list></block><custom-block s="all but %n of %l"><l>last</l><block var="temp"/></custom-block></block><block s="reportNewList"><list><block s="reportListItem"><l><option>last</option></l><block var="temp"/></block></list></block></list></block><block s="reportMap"><block s="reifyReporter"><autolambda><block s="reportDifference"><l>255</l><l></l></block></autolambda><list></list></block><block var="temp"/></block></block></block><block s="doReport"><block s="reportListItem"><block s="reportListIndex"><block var="type"/><block s="reportNewList"><list><l>hex</l><l>RGB list</l></list></block></block><block s="reportNewList"><list><custom-block s="RGB %l as %s"><block var="temp"/><l>hex</l></custom-block><block var="temp"/></list></block></block></block></script></block></script></block-definition><block-definition s="inverse pen color" type="command" category="pen"><header></header><code></code><translations></translations><inputs></inputs><script><custom-block s="set pen color to hex: %s"><custom-block s="%s as negative %s"><custom-block s="RGB %l as %s"><custom-block s="pen %s"><l>RGB</l></custom-block><l>hex</l></custom-block><l>hex</l></custom-block></custom-block></script></block-definition><block-definition s="write %&apos;text&apos; to %&apos;var&apos;" type="command" category="variables"><comment x="0" y="0" w="301.501953125" collapsed="false">Writes the &quot;text&quot; in the specified &quot;var&quot;&#xD;If the &quot;var&quot; does not exist, it won&apos;t run.&#xD;Text is always appended in a new line for legibility</comment><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%s" readonly="true"><options>§_getVarNamesDict</options></input></inputs><script><block s="doIf"><custom-block s="does variable %s exist?"><block var="var"/></custom-block><script><custom-block s="set %s to be %s"><block var="var"/><block s="reportIfElse"><custom-block s="empty? %s"><custom-block s="variable %s"><block var="var"/></custom-block></custom-block><block s="reportJoinWords"><list><custom-block s="variable %s"><block var="var"/></custom-block><block var="text"/></list></block><block s="reportJoinWords"><list><custom-block s="variable %s"><block var="var"/></custom-block><custom-block s="newline"></custom-block><block var="text"/></list></block></block></custom-block></script></block></script></block-definition><block-definition s="create %&apos;scope&apos; variables %&apos;names&apos;" type="command" category="variables"><comment x="0" y="0" w="146" collapsed="false">This block creates  new variables on the selected scope: global (for all sprites), sprite (for this sprite only) or script (only for that blocks stack) with the names given (in &apos;names&apos; list).&#xD;&#xD;If there is already a variable with that name in that scope, it does nothing: no errors and no overwrites.</comment><header></header><code></code><translations>pt:cria as variáveis _ _&#xD;ca:crea les _ variables _&#xD;es:crear las _ variables _&#xD;de:erstellen _ var _&#xD;</translations><inputs><input type="%s" readonly="true">global<options>global&#xD;sprite&#xD;script</options></input><input type="%mult%s"></input></inputs><script><block s="doIfElse"><block s="reportEquals"><block var="scope"/><l>script</l></block><script><block s="doForEach"><l>each item</l><block var="names"/><script><block s="doRun"><block s="reportJSFunction"><list><l>varName</l><l>proc</l></list><l>if ((typeof varName) != "string" || varName === "") {&#xD;    throw new Error("name isn&apos;t a string: " + varName);&#xD;}&#xD;if (!proc.homeContext.variables.vars[varName]) proc.homeContext.variables.addVar(varName);</l></block><list><block var="each item"/></list></block></script></block></script><script><block s="doDeclareVariables"><list><l>global</l></list></block><block s="doIfElse"><block s="reportEquals"><block var="scope"/><l>sprite</l></block><script><block s="doSetVar"><l>global</l><block s="reportBoolean"><l><bool>false</bool></l></block></block></script><script><block s="doSetVar"><l>global</l><block s="reportBoolean"><l><bool>true</bool></l></block></block></script></block><block s="doForEach"><l>each item</l><block var="names"/><script><block s="doRun"><block s="reportJSFunction"><list><l>varName</l><l>global</l><l>proc</l></list><l>if ((typeof varName) != "string" || varName === "") {&#xD;    throw new Error("name isn&apos;t a string: " + varName);&#xD;}&#xD;if (global &amp;&amp; !proc.homeContext.variables.parentFrame.parentFrame.vars[varName]) this.addVariable(varName, true);&#xD;if (!global &amp;&amp; !proc.homeContext.variables.parentFrame.vars[varName]) this.addVariable(varName, false);</l></block><list><block var="each item"/><block var="global"/></list></block></script></block><block s="doRun"><block s="reportJSFunction"><list></list><l>var ide = this.parentThatIsA(IDE_Morph);&#xD;ide.flushBlocksCache(&apos;variables&apos;); // b/c of inheritance&#xD;ide.refreshPalette();</l></block><list></list></block></script></block></script></block-definition><block-definition s="delete variables %&apos;names&apos;" type="command" category="variables"><comment x="0" y="0" w="217" collapsed="false">This block deletes all the variables with the names given (inside input list).&#xD;&#xD;Each name will make only one variable deletion, and this will be the variable found following the scope order: &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos;.&#xD;&#xD;If we have a &quot;testing&quot; sprite variable and also a &quot;testing&quot; global one, deleting &quot;testing&quot; will delete only the sprite one (Yes! we can also do &quot;delete var (testing, testing)&quot; to delete both.&#xD;&#xD;If one variable does not exists (in any scope) an error happens, stopping block action in that point. You can check it before with the &quot;does var (name) exists?&quot;block. </comment><header></header><code></code><translations>pt:remove as variáveis _&#xD;ca:esborra les variables _&#xD;es:borrar variables _&#xD;de:löschen var _&#xD;</translations><inputs><input type="%mult%s"></input></inputs><script><block s="doForEach"><l>each item</l><block var="names"/><script><block s="doRun"><block s="reportJSFunction"><list><l>varName</l><l>proc</l></list><l>if ((typeof varName) != "string" || varName === "") {&#xD;    throw new Error("name isn&apos;t a string: " + varName);&#xD;}&#xD;if (typeof proc.homeContext.variables.vars[varName] !== &apos;undefined&apos;) {&#xD;    delete proc.homeContext.variables.vars[varName];&#xD;} else if (this.deletableVariableNames().indexOf(varName) != -1) {&#xD;    this.deleteVariable(varName);&#xD;} else {&#xD;    throw new Error("variable doesn&apos;t exist: " + varName);&#xD;}</l></block><list><block var="each item"/></list></block></script></block><block s="doRun"><block s="reportJSFunction"><list></list><l>var ide = this.parentThatIsA(IDE_Morph);&#xD;ide.flushBlocksCache(&apos;variables&apos;); // b/c of inheritance&#xD;ide.refreshPalette();</l></block><list></list></block></script></block-definition><block-definition s="variable %&apos;name&apos;" type="reporter" category="variables"><comment x="0" y="0" w="178.00000000000003" collapsed="false">This block reports the value of the variable with the name given.&#xD;&#xD;It looks for that variable following the scope order &apos;script&apos; -&gt; &apos;sprite&apos; -&gt; &apos;global&apos; (the first match it finds).&#xD;&#xD;If that variable does not exist (in any scope) an error happens, stopping their script. You can check it before using the &quot;does var (name) exists?&quot; block. </comment><header></header><code></code><translations>pt:o valor de _&#xD;</translations><inputs><input type="%s"><options>§_getVarNamesDict</options></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>varName</l><l>proc</l></list><l>if ((typeof varName) != "string") {&#xD;    throw new Error("name isn&apos;t a string: " + varName);&#xD;}&#xD;return proc.homeContext.variables.getVar(varName);</l></block><list><block var="name"/></list></block></block></script></block-definition><block-definition s="does variable %&apos;name&apos; exist?" type="predicate" category="variables"><comment x="0" y="0" w="146" collapsed="false">This block reports &quot;true&quot; if there is a variable with this given name (input slot) in that context.&#xD;&#xD;It can be a global, sprite or script variable.&#xD;&#xD;Otherwise it reports &quot;false&quot;.</comment><header></header><code></code><translations>pt:a variável _ existe&#xD;ca:existeix la variable _ ?&#xD;es:existe la variable _ ?&#xD;de:existiert var _ ?&#xD;</translations><inputs><input type="%s"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>varName</l><l>proc</l></list><l>if ((typeof varName) != "string" || varName === "") {&#xD;    throw new Error("name isn&apos;t a string: " + varName);&#xD;}&#xD;return proc.homeContext.variables.silentFind(varName)? true:false;</l></block><list><block var="name"/></list></block></block></script></block-definition><block-definition s="if %&apos;bool&apos; %&apos;inline&apos; while being draggable" type="command" category="motion"><comment x="0" y="0" w="189" collapsed="false">Runs the script only while you can actually drag the sprite using the mouse.</comment><header></header><code></code><translations></translations><inputs><input type="%b"></input><input type="%cs"></input></inputs><script><block s="doIf"><block var="bool"/><script><custom-block s="run %cmdRing while being draggable"><block var="inline"/></custom-block></script></block></script></block-definition><block-definition s="if %&apos;bool&apos; %&apos;script&apos; else %&apos;action&apos; while being draggable" type="command" category="motion"><comment x="0" y="0" w="189" collapsed="false">Runs the script only while you can actually drag the sprite using the mouse.</comment><header></header><code></code><translations></translations><inputs><input type="%b"></input><input type="%cs"></input><input type="%cs"></input></inputs><script><custom-block s="run %cmdRing while being draggable"><block s="reportIfElse"><block var="bool"/><block var="script"/><block var="action"/></block></custom-block></script></block-definition><block-definition s="if %&apos;bool&apos; %&apos;script&apos; while being draggable else %&apos;action&apos; and if not %&apos;script1&apos; while being draggable else %&apos;action1&apos;" type="command" category="motion"><header></header><code></code><translations></translations><inputs><input type="%b"></input><input type="%cs"></input><input type="%cs"></input><input type="%cs"></input><input type="%cs"></input></inputs><script><custom-block s="run %cs while being draggable else %cs"><block s="reportIfElse"><block var="bool"/><block var="script"/><block var="script1"/></block><block s="reportIfElse"><block var="bool"/><block var="action"/><block var="action1"/></block></custom-block></script></block-definition><block-definition s="root object" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportIfElse"><custom-block s="Am I a clone?"></custom-block><block s="reportAskFor"><block s="reportGet"><l><option>parent</option></l></block><block s="reifyReporter"><autolambda><custom-block s="root object"></custom-block></autolambda><list></list></block><list></list></block><block s="reportObject"><l><option>myself</option></l></block></block></block></script></block-definition><block-definition s="anchored?" type="predicate" category="sensing"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportIsA"><block s="reportGet"><l><option>anchor</option></l></block><l><option>sprite</option></l></block></block></script></block-definition><block-definition s="attached sprite" type="reporter" category="sensing"><header></header><code></code><translations></translations><inputs></inputs><script><block s="doReport"><block s="reportIfElse"><custom-block s="anchored?"></custom-block><block s="reportGet"><l><option>anchor</option></l></block><block s="reportObject"><l><option>myself</option></l></block></block></block></script></block-definition></blocks>